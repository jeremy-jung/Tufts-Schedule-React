{"version":3,"sources":["components/views/styles/Popup.module.css","components/views/styles/Homepage.module.css","components/views/styles/CoursesSelectedList.module.css","components/views/styles/CourseSelected.module.css","components/views/styles/ButtonFBLogin.module.css","components/views/CourseDetailPop.js","components/views/CourseSelected.js","components/views/CoursesSelectedList.js","components/views/CourseNameRecommendation.js","components/views/Popup.js","components/Homepage.js","components/Event.js","components/views/ButtonFBLogin.js","components/Schedule.js","App.js","components/views/scripts/fb.js","index.js"],"names":["module","exports","CourseDetailPop","props","state","showPop","closePop","bind","removeCourse","console","log","this","courseInfo","className","style","couresPopContainer","closeContainer","close","onClick","tit","course_id","course_name","type","value","overlay","React","Component","CourseSelected","popDetail","showDetail","event","preventDefault","setState","handlePop","all","coursePopDetail","popCourse","course","CoursesSelectedList","listCourseIDs","containerClass","selectedCourses","popUp","popContainer","container","id","popCourseList","courseList","map","pop","popButton","button","handleGenerate","to","CourseNameRecommendation","recommendedCourseIDs","courseID","courseIDsRecommended","mappedResults","undefined","resultsMaxDisplay","length","i","courseId","doesNotExist","j","push","currentInput","recommendSearch","Popup","updateSelectedPop","popupContainer","popMap","popOptions","item","alert","alertMessage","Homepage","checkSameID","handleAdd","handleChange","setMessage","checkID","nameField","document","getElementById","handleCheckID","includes","courseToAdd","arrayJoined","concat","popSelected","message","getListCourseIDs","process","fetch","then","response","json","result","data","error","name","toLowerCase","res","logoContainer","containerInput","onSubmit","onChange","list","courseInput","autoComplete","placeholder","courseSubmit","localeCompare","noAlert","Event","weekTitle","week","ButtonFBLogin","handleFBLogin","callback","window","FB","login","responseLogin","authResponse","handleStatusChange","accessToken_FB","accessToken","dataAccessExpirationTime_FB","data_access_expiration_time","userID_FB","userID","getGroupsFB","parseLoginStatus","status","checkFBLoginState","getLoginStatus","Schedule","TimeRangeView","handleTimeRangeView","getFBAuthDetails","api","App","path","Promise","resolve","d","s","js","fjs","getElementsByTagName","createElement","src","parentNode","insertBefore","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","ReactDOM","render"],"mappings":"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","file":"static/js/main.968ae53c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Popup_overlay__1EiQX\",\"popupContainer\":\"Popup_popupContainer__25JEo\",\"popOptions\":\"Popup_popOptions__2Ji46\",\"tit\":\"Popup_tit__1-cbN\",\"closeContainer\":\"Popup_closeContainer__Uexd0\",\"close\":\"Popup_close__2_zr_\",\"couresPopContainer\":\"Popup_couresPopContainer__22HOp\",\"courseInfo\":\"Popup_courseInfo__3cd-a\",\"removeCourse\":\"Popup_removeCourse__3xR7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoContainer\":\"Homepage_logoContainer__3mre2\",\"container\":\"Homepage_container__cwfji\",\"containerInput\":\"Homepage_containerInput__2lEJ8\",\"courseInput\":\"Homepage_courseInput__1Wo5U\",\"courseSubmit\":\"Homepage_courseSubmit__3ylg9\",\"alert\":\"Homepage_alert__3AioS\",\"notAlert\":\"Homepage_notAlert__mmyL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CoursesSelectedList_container__1Tmkz\",\"popContainer\":\"CoursesSelectedList_popContainer__161nb\",\"button\":\"CoursesSelectedList_button__2lQ6A\",\"popButton\":\"CoursesSelectedList_popButton__1G_q5\",\"courseList\":\"CoursesSelectedList_courseList__1QBMC\",\"popCourseList\":\"CoursesSelectedList_popCourseList__1V7KD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"CourseSelected_course__3NBu-\",\"popCourse\":\"CourseSelected_popCourse__PsGFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonFBLogin_button__1iqyz\"};","/*\n    CourseDetailPop\n    Created by Duncan Chang\n*/\nimport React from 'react';\nimport style from './styles/Popup.module.css';\n\n\nclass CourseDetailPop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            showPop: true,\n        }\n        this.closePop = this.closePop.bind(this);\n        this.removeCourse = this.removeCourse.bind(this);\n    }\n\n    /*  \n     *  closePop()\n     *  calls the closePop function in Homepage\n     *  calls updateSelectedPop function in Homepage to reset alertMessage\n     */ \n    async closePop()\n    {\n        console.log(\"test here:\");\n      \n        await this.props.closePop();\n        console.log(\"it's closed?\");\n\n    }\n\n    async removeCourse()\n    {\n        await this.props.removeCourse(this.props.courseInfo);\n        await this.closePop();\n    }\n   \n\n    render() {\n        \n        return (\n            <div>\n                {/* container for the rest of info */}\n                <div className={style.couresPopContainer} >\n                \n                    {/* This is the close div */}\n                    <div className={style.closeContainer} >\n                        <button className={style.close} onClick={this.closePop}>X</button>\n                    </div>\n                    <p className={style.tit} >{this.props.courseInfo.course_id}</p>\n\n                    <div className={style.courseInfo}>\n                        {this.props.courseInfo.course_name}\n                    </div>\n\n                    \n                    <br/>\n                    <input type=\"button\" value=\"Remove From List\" className={style.removeCourse} onClick={this.removeCourse}></input>\n                    \n                </div>\n\n                <br/>\n\n                {/* // overlay div */}\n                <div className={style.overlay}></div>\n\n            </div>\n           \n            \n        );\n      \n    }\n}\n\nexport default CourseDetailPop;","/*\n    Selected course\n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport style from './styles/CourseSelected.module.css';\nimport CourseDetailPop from './CourseDetailPop'\n\nclass CourseSelected extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            popDetail: false,\n        }\n\n        this.showDetail = this.showDetail.bind(this);\n\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n    async showDetail()\n    {\n        console.log(\"it called this\");\n        await this.setState({\n            popDetail: true,\n        })\n        console.log(\"did it call, \" , this.state.popDetail);\n        await this.props.handlePop();\n        console.log(\"did it call here\");\n\n    }\n\n    async closePop()\n    {\n        await this.setState({\n            popDetail: false,\n        })\n        await this.props.closePop();\n    }\n    \n   \n\n    render() {\n        console.log(\"popDetail: \" , this.state.popDetail);\n      \n\n        return (\n            <div className={style.all}>\n\n                <div >\n                    <input type=\"button\" onClick={this.showDetail} value={this.props.courseInfo.course_id} className={this.props.coursePopDetail ? style.popCourse : style.course}/>\n                </div>  \n                \n                {this.state.popDetail ? <CourseDetailPop showDetail={()=> this.showDetail.bind(this)} courseInfo={this.props.courseInfo} closePop={this.closePop.bind(this)} removeCourse={this.props.removeCourse}></CourseDetailPop> : <div></div>}\n\n            </div>\n\n            \n            );\n        \n       \n        \n      \n    }\n}\n\nexport default CourseSelected;","/*\n    List containing selected selected courses represented by {CourseSelected}\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport style from './styles/CoursesSelectedList.module.css';\nimport CourseSelected from './CourseSelected.js';\nimport {\n    Link\n} from \"react-router-dom\";\nclass CoursesSelectedList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: this.props.listCourseIDs,\n            coursePopDetail: false,\n        }\n\n    }\n\n    async handlePop()\n    {\n        console.log(\"coursePopDetail before: \" , this.state.coursePopDetail);\n\n        await this.setState({\n            coursePopDetail: true,\n        })\n        console.log(\"coursePopDetail after: \" , this.state.coursePopDetail);\n    }\n    \n    async closePop()\n    {\n        await this.setState({\n            coursePopDetail: false,\n        })\n    }\n\n    // async removeCourse(item)\n    // {\n    //     await this.props.removeCourse(item);\n    // }\n\n    render() {\n        console.log(\"my seleceted courses: \" , this.props.selectedCourses);\n        let containerClass;\n        // checks which css class the container should follow\n        if (this.state.coursePopDetail)\n        {\n            containerClass = false;\n        }\n        else\n        {\n            containerClass = this.props.popUp;\n        }\n        \n        console.log(\"test this: \" , this.state.coursePopDetail);\n        console.log(\"containerClass: \", containerClass);\n        return (\n            <div className = {containerClass ? style.popContainer : style.container}id = \"coursesSelectedList\">\n                <h2>Your selected courses</h2>\n                <div className={this.state.coursePopDetail ? style.popCourseList : style.courseList}>\n                    {this.props.selectedCourses.map(function (courseInfo) {\n                        return <CourseSelected courseInfo = {courseInfo} pop={false} handlePop = {this.handlePop.bind(this)} closePop= {this.closePop.bind(this)} coursePopDetail = {this.state.coursePopDetail} removeCourse={this.props.removeCourse}></CourseSelected>\n                    }, this)}\n                </div>\n                <br/>\n                <Link className = {this.state.coursePopDetail ? style.popButton : style.button} onClick = {this.props.handleGenerate} to = \"/schedule\">\n                    Schedule\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default CoursesSelectedList;","/*\n    Drop down list of course name suggestions\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\n//import style from './styles/CourseNameRecommendation.module.css';\n\n\nclass CourseNameRecommendation extends React.Component {\n    \n    constructor (props) {\n        super(props);\n        console.log(\"render\");\n\n        this.state = {\n            recommendedCourseIDs: null,\n\n        }\n    }\n\n    // O(k) where k is length of courseID\n    // courseID is the user input\n    // listCourseIDs takes in the courseID\n    recommendSearch (listCourseIDs, courseID) {\n        var courseIDsRecommended = [];\n        let mappedResults = [];\n\n        if (courseID != undefined || courseID != null) {\n\n            // recommend if there is at least one character in input\n            if (courseID[0] != undefined) {\n\n                // mapperResults is an array of \"matched\" courses (from API) by the user input \n                mappedResults = listCourseIDs[courseID];\n                // console.log(\"listCourseIDs: \" + listCourseIDs);\n                // console.log(\"courseID: \" + courseID);\n\n\n                if (mappedResults != undefined) {\n\n                    let resultsMaxDisplay = 5;\n                    \n                    // lower maximum results length if one specified is greater than what's possible\n                    if (resultsMaxDisplay > mappedResults.length)\n                        resultsMaxDisplay = mappedResults.length;\n\n                    /* DEBUG: list all info */\n                    // console.log(\"resultsMaxDisplay: \", resultsMaxDisplay)\n                    // console.log(\"mappedResults:\", mappedResults)\n                    // console.log(\"mappedResults.length: \", mappedResults.length)\n                    // console.log(\"mappedResults[0]: \" + mappedResults[0]);\n                    // console.log(\"mappedResults[0].course_id: \" + mappedResults[0].course_id);\n\n                    let i = 0;\n                    /* add recommended courseIDs to list by amount specified by resultsMaxDisplay*/\n                    while (courseIDsRecommended.length < resultsMaxDisplay && i < mappedResults.length) {\n                        // console.log(\"i: \", i);\n                        /* break if i is equal to the length of mappedResults */\n                        if (i >= mappedResults.length)\n                            break; \n\n                        let courseId = mappedResults[i].course_id;\n                        console.log(\"mappedResults:\", mappedResults);\n\n                        /* check if the courseId already exists in courseIDsRecommended */\n                        let doesNotExist = true;\n                        for (let j = 0; j < courseIDsRecommended.length; j++) {\n\n                            if (courseIDsRecommended[j] == courseId) {\n                                doesNotExist = false;\n                                break;\n                            }\n                        }\n\n                        /* push to recommended list if entry does not yet exist */\n                        if (doesNotExist) {\n                            courseIDsRecommended.push(courseId);\n                        }\n                        i++;\n                    }\n\n                }\n                else {\n                    courseIDsRecommended = [];\n                }\n               \n            }\n            else {\n                courseIDsRecommended = [];\n            }\n        }\n        else {\n            courseIDsRecommended = [];\n        }\n\n        return courseIDsRecommended;\n\n    }\n\n    \n\n    render() {\n\n        let currentInput = this.props.currentInput;\n\n        let listCourseIDs = this.props.listCourseIDs;\n\n        var recommendedCourseIDs = this.recommendSearch(listCourseIDs, currentInput);\n\n        console.log(\"recommendedCourseIDs: \" + recommendedCourseIDs);\n        \n        return(\n            <datalist id=\"recommendedCourseIDs\">\n                {recommendedCourseIDs.map(function (id) {\n                    return <option key={id} value={id} ></option>\n                })}\n            </datalist>\n        );\n    }\n\n}\nexport default CourseNameRecommendation;","/*\n    Popup\n    Created by Duncan Chang\n*/\nimport React from 'react';\nimport style from './styles/Popup.module.css';\n\n\nclass Popup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            showPop: true,\n        }\n        this.closePop = this.closePop.bind(this);\n       \n    }\n\n    /*  \n     *  closePop()\n     *  calls the closePop function in Homepage\n     *  calls updateSelectedPop function in Homepage to reset alertMessage\n     */ \n    async closePop()\n    {\n        console.log(\"test here:\");\n        if (this.state.showPop)\n        {\n            await this.props.closePop();\n            this.props.updateSelectedPop(\"hey\");\n        }\n\n    }\n   \n\n    render() {\n        \n        return (\n            <div>\n                <div className={style.popupContainer} >\n                \n                \n                    <div className={style.closeContainer} >\n                        <button className={style.close} onClick={this.closePop}>X</button>\n\n                    </div>\n                    <p className={style.tit} >Please select a class from the list!</p>\n                    <div >\n                        {this.props.popMap.map(function (courseInfo) {\n                        \n                            return <input className={style.popOptions} type=\"button\" item={courseInfo} onClick={() => this.props.updateSelectedPop(courseInfo)} value={courseInfo.course_id + \":    \" + courseInfo.course_name}/>\n\n                            }, this)\n                        }\n                    \n                        <div className={style.alert} id=\"alert\">{this.props.alertMessage}</div>\n                    </div>\n\n                \n\n                </div>\n                <div className={style.overlay}></div>\n\n            </div>\n           \n            \n        );\n      \n    }\n}\n\nexport default Popup;","/*\n    Pages: Home page\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\n// import Popup from 'reactjs-popup';\nimport CoursesSelectedList from './views/CoursesSelectedList.js';\nimport CourseNameRecommendation from './views/CourseNameRecommendation.js';\nimport style from './views/styles/Homepage.module.css';\nimport Popup from './views/Popup.js';\n\n/* scripts */\n\nclass Homepage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: null, // all course IDs in semester catalog (mapped first letter)\n            currentInput: null,\n            recommendedCourseIDs: null,\n            selectedCourses: [],\n            checkSameID: true,\n            popUp: false,\n            popMap: [],\n            alertMessage: \"***\",\n        }\n\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.setMessage = this.setMessage.bind(this);\n        this.updateSelectedPop = this.updateSelectedPop.bind(this);\n    }\n\n    /*\n     * handleCheckID\n     * checks if user is entering a valid courseID.\n     * effect: sets checkSameID to false if multiple courses with different ID \n     *          is found, meaning that the user hasn't entered the exact courseID\n     */\n    handleCheckID(mappedResults) {\n        // Debug purpose\n        console.log(\"mappedResults length: \" + mappedResults.length);\n        console.log(\"checkSameID: \" + this.state.checkSameID);\n        console.log(mappedResults[0]);\n        // console.log(mappedResults[1]);\n        // console.log(mappedResults[0].course_id == mappedResults[1].course_id);\n\n        \n        let checkID = mappedResults[0].course_id;\n\n        // checks if the user input is a valid courseID\n        for (var i = 0; i < mappedResults.length; i++)\n        {\n            console.log(this.state.checkSameID);\n            console.log(\"the length of mappedReusults:\" + mappedResults.length);\n            if (mappedResults[i].course_id !== checkID)\n            {\n                console.log(\"it went in here\");\n                // prevent user from adding incomplete course ID \n                this.setState({\n                    checkSameID: false\n                })\n                break;\n            }\n            console.log(this.state.checkSameID);\n\n        }\n\n    }\n\n    // handles the add function. prevents user from adding non-existing courseID\n    async handleAdd(event) {\n\n        await this.setMessage(\"***\");\n\n        console.log(\"the beginning state: \" + this.state.checkSameID);\n        //prevent default event handler\n        event.preventDefault();\n        let nameField = document.getElementById(\"input\");\n        let mappedResults = this.state.listCourseIDs[this.state.currentInput];\n\n        // checks if user input is valid\n        if (mappedResults !== undefined)\n        {\n            // resets the state of popUp\n            this.setState({\n                popUp: false,\n            })\n            // needs checkSameID to be up to date. always.\n            await this.handleCheckID(mappedResults);\n\n            // This if is to check if Popup is needed\n            if(this.state.checkSameID && mappedResults.length > 1)\n            {\n                this.setState({\n                    popUp: true,\n                    popMap: mappedResults,\n                })\n            }\n            // checks if a course has been added\n            else if (this.state.checkSameID && (this.state.selectedCourses.includes(mappedResults[0])))\n            {\n                await this.setMessage(\"** This course has already been added! **\");\n            }\n            // adds that one course to list\n            else if (this.state.checkSameID || mappedResults.length === 1)\n            {\n                // let name = this.state.currentInput.toUpperCase(); // get user input\n                let courseToAdd = mappedResults[0];\n                // UPDATE STATE selectedCourses \n                var arrayJoined = this.state.selectedCourses.concat(courseToAdd);\n                this.setState({ selectedCourses: arrayJoined });\n\n                nameField.value = \"\";\n            }\n            else{\n                console.log(\"here 2\");\n                console.log(\"alerts here\");\n                // resets the state\n                this.setState({\n                    checkSameID: true,\n                })\n                await this.setMessage(\"** Please enter a VALID COURSE ID! **\");\n            }\n        }\n        // if user input is invalid\n        else{\n            await this.setMessage(\"** Please enter a VALID COURSE ID! **\");\n\n        }\n        \n        \n    }\n\n    /*  \n     *  closePop()\n     *  a callback function by Popup.js's closing div (x)\n     *  manages the state of whether a Popup should be shown\n     *  resets the state of popUp\n     */ \n    closePop()\n    {\n        this.setState({\n            popUp: false\n        })\n    }\n   \n    /*  \n     *  updateSelectedPop()\n     *  manages actions if a course is selected from Popup\n     *  adds course to courselist \n     */ \n    async updateSelectedPop(popSelected)\n    {\n        console.log(\"close: \" + popSelected);\n        // checks if popUp should be shown, and if selected course was previously added\n        if (this.state.popUp && !this.state.selectedCourses.includes(popSelected))\n        {\n            \n            var arrayJoined = this.state.selectedCourses.concat(popSelected);\n            console.log(\"test: \" , popSelected);\n            this.setState({ \n                selectedCourses: arrayJoined,\n                popUp: false \n            });\n            document.getElementById(\"input\").value = \"\";\n        }\n        else if (this.state.popUp){\n            console.log(\"this alert\");\n            await this.setMessage(\"** This Course Has Already Been Added! **\");\n        }\n        else{\n            document.getElementById(\"input\").value = \"\";\n            this.setMessage(\"***\");\n        }\n        \n        \n        \n    }\n    /*  \n     *  setMessage()\n     *  changes the message in div when called using {message}\n     *  sets the state of alertMessage \n     */ \n    setMessage(message){\n        this.setState({\n            alertMessage: message,\n        })\n        \n    }\n\n    handleGenerate() {\n        \n        var selectedCourses = this.state.selectedCourses;\n        console.log(\"handling generate\");\n        console.log(\"selectedCourses: \", selectedCourses);\n    }\n\n    componentDidMount() {\n        // initialize {listCourseIDs} in this component's state\n        this.getListCourseIDs();\n\n    }\n    \n    async getListCourseIDs() {\n        var API_URL = process.env.REACT_APP_API_URL + \"/courses/alg/search-table\";\n        fetch(API_URL)\n            .then(\n                (response) => response.json()\n            )\n            .then(result => {\n                //if the request is valid\n                this.setState({\n                    listCourseIDs: result.data\n                });\n            },\n            (error) => {\n                console.log(\"error\", error);\n        });\n    }\n\n    /* CourseID input scripts */\n\n    // todo: link\n    handleChange() {\n        console.log(\"handling change\");\n        let nameField = document.getElementById(\"input\");\n        let name = nameField.value.toLowerCase(); // get user input\n        this.setState((state) => ({ currentInput: name })); // update state (currentInput)\n        \n    }\n\n    /*  \n     *  removeCourse(item)\n     *  deletes the course specified (passed in as \"item\") \n     *  looks through selectedCourses, finds, then delete\n     */ \n    async removeCourse(item) {\n        \n        var res = this.state.selectedCourses;\n        // look for the index and remove\n        for (var i = 0 ; i < this.state.selectedCourses.length; i++)\n        {\n            if (this.state.selectedCourses[i] === item)\n            {\n                delete res[i]\n                await this.setState({\n                    selectedCourses: res,\n                })\n                break;\n            }\n        }\n\n    }\n\n    render() {\n\n        /* asynchronously render home page after getting courseIDs*/\n        if (this.state.listCourseIDs == null) {\n            // render loading state...\n            return (\n                <div className={style.container}>\n                    Loading...\n                </div>\n            );\n        }\n        else {\n            // render real UI..\n                return (\n                    <div className={style.container}>\n                        <header className={style.logoContainer}>\n                            <h1>Schedule Planner</h1>\n                            <br/>\n                            <br/>\n                        </header>\n                        <CoursesSelectedList handleGenerate = {this.handleGenerate.bind(this)} selectedCourses={this.state.selectedCourses} listCourseIDs = {this.state.listCourseIDs} popUp={this.state.popUp} removeCourse={this.removeCourse.bind(this)}>\n                            <input type = \"submit\"></input>\n                        </CoursesSelectedList>\n                        <div className={style.containerInput}>\n\n                            <h2>Choose a course</h2>\n                            <div>\n                                <form onSubmit={this.handleAdd}>\n                                    <div>\n                                        <input onChange={this.handleChange} list='recommendedCourseIDs' id=\"input\" className={style.courseInput} type=\"text\" autoComplete=\"off\" placeholder=\"COMP-0015\" />\n                                        <CourseNameRecommendation listCourseIDs = {this.state.listCourseIDs} currentInput = {this.state.currentInput}></CourseNameRecommendation>\n                                    </div>\n                                    <div id = \"addPop\">\n                                        {this.state.popUp ? <Popup popMap={this.state.popMap} updateSelectedPop={this.updateSelectedPop.bind(this)} closePop={this.closePop.bind(this)} setMessage={this.setMessage.bind(this)}  /> : <input className={style.courseSubmit} type=\"submit\" value=\"Add\" />}\n                                        \n                                    </div>\n                                </form>\n                            </div>\n\n\n                            <br/>\n                            {(this.state.alertMessage.localeCompare(\"***\"))? <div className={style.alert} id=\"alert\">{this.state.alertMessage}</div> : <div className={style.noAlert} id=\"alert\">{this.state.alertMessage}</div>}\n                        </div>\n                        \n                    </div>\n                \n            );\n        }\n    }\n}\n\nexport default Homepage;","/*\n *\n *\n */\n\nimport React from 'react';\n\n\nclass Event extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n        }\n\n    }\n   \n\n\n    render() {\n        let weekTitle = \"\";\n        let week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        for (let i = 0; i < 5; i++)\n        {\n            weekTitle += \"<div className=\\\"\" + week[i] + \"\\\" >\"+ week[i] + \"</div>\";\n        }\n        return(\n            <div className=\"calendar\">\n           \n                <div className=\"weekTitle\">\n                    <div className=\"blank\">\n\n                    </div>\n                    {weekTitle}\n\n                </div>\n                <div className=\"events\">\n\n                </div>\n\n            </div>\n\n        )\n\n\n    }\n}\nexport default Event;","/* Written by Jeremy (9/1/2021)\n    Facebook Login button\n*/\n\nimport React from 'react';\nimport style from './styles/ButtonFBLogin.module.css';\n\nclass ButtonFBLogin extends React.Component {\n    constructor (props) {\n        /* use callbacks from parent to get states from this child */\n        super(props);\n\n        this.state = {\n            accessToken_FB: undefined,\n            dataAccessExpirationTime_FB: undefined,\n            userID_FB: undefined\n        }\n\n        this.handleFBLogin = this.handleFBLogin.bind(this);\n        this.parseLoginStatus = this.parseLoginStatus.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this);\n    }\n    \n    /* open Facebook Login pop up and prompt user login */\n    handleFBLogin = (callback) => {\n        window.FB.login(function (responseLogin) {\n\n            if (responseLogin.authResponse) {\n\n                /* FB authorization is complete */\n\n                callback(responseLogin.authResponse);\n\n            }\n            else {\n                console.log(\"authResponse is undefined\");\n            }\n        })\n    }\n\n    /* parse authorization response from FB and update component's states with them */\n    handleStatusChange = (authResponse) => {\n\n        this.setState({\n            accessToken_FB: authResponse.accessToken,\n            dataAccessExpirationTime_FB: authResponse.data_access_expiration_time,\n            userID_FB: authResponse.userID\n        })\n\n        this.props.getGroupsFB();\n    }\n    \n    // parse response for login from FB.getLoginStatus()\n    parseLoginStatus = (response) => {\n\n        // check facebook login status\n        if (response.status === \"unknown\") {\n\n            /* Not already logged in to facebook, start login to FB */\n\n            this.handleFBLogin(\n                // Update component's states with Facebook auth details\n                (authResponse) => this.handleStatusChange(authResponse)\n            );\n\n        }\n        else if (response.status === \"connected\") {\n\n            /* Logged in to FB */\n\n            // Update component's states with Facebook auth details\n            this.handleStatusChange(response.authResponse);\n        }\n    }\n\n    /* check if web page is already logged in to Facebook */\n    checkFBLoginState = () => {\n\n        window.FB.getLoginStatus (  \n            (response) => this.parseLoginStatus(response)\n        );\n    }\n\n    render () {\n\n        if (window.FB !== undefined ) {\n            console.log(\"window.FB is defined!!!!!!!!!!1\")\n        }\n\n        return (\n            <div>\n                <div>\n                    <button onClick={this.checkFBLoginState} className={style.button}>\n                        Login to Facebook\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ButtonFBLogin;","/*\n * \n */\n\nimport React from 'react';\nimport Event from './Event.js';\nimport ButtonFBLogin from './views/ButtonFBLogin.js';\n\nclass Schedule extends React.Component {\n\n    constructor (props) {\n\n        super(props);\n\n        this.state = {\n            TimeRangeView: false,\n            accessToken_FB: undefined,\n            dataAccessExpirationTime_FB: undefined,\n            userID_FB: undefined\n        };\n\n        this.handleTimeRangeView = this.handleTimeRangeView.bind(this);\n        this.getFBAuthDetails = this.getFBAuthDetails.bind(this);\n        this.getGroupsFB = this.getGroupsFB.bind(this);\n    }\n    \n    getFBAuthDetails (state) {\n        this.setState({\n            accessToken_FB: state.accessToken_FB,\n            dataAccessExpirationTime_FB:  state.dataAccessExpirationTime_FB,\n            userID_FB: state.userID_FB\n        })\n\n        this.getGroupsFB();\n    }\n\n    getGroupsFB () {\n        /*\n        var API_URL = \"https://graph.facebook.com/\"+ this.state.userID_FB + \"/groups\";\n\n        fetch(API_URL)\n        .then(\n            (response) => response.json()\n        )\n        .then(result => {\n            //if the request is valid\n            console.log(result);\n        },\n        (error) => {\n            console.log(\"error\", error);\n        });\n        */\n\n        window.FB.api(\n            \"/\" + this.state.userID_FB + \"/groups\", \n            function (response) {\n\n                if (response & !response.error) {\n\n                    console.log(\"response: \", response);\n                    \n                }\n            }\n        )\n\n    }\n\n    handleTimeRangeView() {\n  \n        this.setState({\n            TimeRangeView: !this.state.TimeRangeView\n        });\n        console.log(this.TimeRangeView);\n    \n    }\n\n    render() {\n        return (\n            <main>\n                <h1>\n                    Schedule!\n                </h1>\n                <div className=\"navbar\">\n                    <button onClick={this.handleTimeRangeView}>{`${this.state.TimeRangeView ? 'My Schedule' : 'Time Range Selector'}`}</button>\n\n                </div>\n                \n                <div>\n                    <Event />\n                </div>\n                <div>\n                    <ButtonFBLogin getGroupsFB = {this.getGroupsFB} ></ButtonFBLogin>\n                </div>\n            </main>\n            \n        )\n\n    }\n}\nexport default Schedule;","/* \n    Main react app \n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport Homepage from \"./components/Homepage.js\";\nimport Schedule from \"./components/Schedule.js\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Calendar from './components/Event.js';\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/schedule\">\n                        <Schedule />\n                    </Route>\n                    <Route path=\"/\">\n                        <Homepage />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}","/* Written by Jeremy Jung (9/1/2021)\n    async get Facebook javascript SDK\n*/\n\nconst facebookAppId = process.env.REACT_APP_FACEBOOK_APP_ID;\n\nexport default function initFBSDK () {\n    return new Promise(resolve => {\n        (function (d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) { return; }\n            js = d.createElement(s); js.id = id;\n            js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n            fjs.parentNode.insertBefore(js, fjs);\n        }(document, 'script', 'facebook-jssdk'));\n\n        window.fbAsyncInit = function () {\n            window.FB.init({\n                appId: facebookAppId,\n                cookie: true,\n                xfbml: true,\n                version: 'v9.0'\n            });\n            \n            // check if user is logged in to facebook\n            window.FB.getLoginStatus(({ authResponse }) => {\n\n                if (authResponse) {\n                    console.log(\"Already logged in to facebook\");\n                } else {\n                    console.log(\"Not logged in to facebook\");\n                    resolve();\n                }\n\n            });\n\n            window.FB.AppEvents.logPageView();\n        }\n\n    })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\nimport initFBSDK from './components/views/scripts/fb.js';\n\n/* load React App after FB SDK is received */\ninitFBSDK().then(\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n);"],"sourceRoot":""}