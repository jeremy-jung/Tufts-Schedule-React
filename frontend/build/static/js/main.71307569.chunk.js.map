{"version":3,"sources":["components/views/styles/Homepage.module.css","components/views/styles/CoursesSelectedList.module.css","components/views/styles/CourseSelected.module.css","components/views/styles/ButtonFBLogin.module.css","components/views/CourseSelected.js","components/views/CoursesSelectedList.js","components/views/CourseNameRecommendation.js","components/Homepage.js","components/Event.js","components/views/ButtonFBLogin.js","components/Schedule.js","App.js","components/views/scripts/fb.js","index.js"],"names":["module","exports","CourseSelected","props","event","preventDefault","className","style","course","this","courseID","React","Component","CoursesSelectedList","state","listCourseIDs","container","id","selectedCourses","map","button","onClick","handleGenerate","to","CourseNameRecommendation","console","log","recommendedCourseIDs","courseIDsRecommended","mappedResults","undefined","resultsMaxDisplay","length","i","courseId","course_id","doesNotExist","j","push","currentInput","recommendSearch","value","Homepage","checkSameID","handleAdd","bind","handleChange","checkID","setState","nameField","document","getElementById","handleCheckID","includes","window","alert","name","toUpperCase","arrayJoined","concat","getListCourseIDs","process","fetch","then","response","json","result","data","error","toLowerCase","type","containerInput","onSubmit","onChange","list","courseInput","autoComplete","placeholder","courseSubmit","Event","weekTitle","week","ButtonFBLogin","handleFBLogin","callback","FB","login","responseLogin","authResponse","handleStatusChange","accessToken_FB","accessToken","dataAccessExpirationTime_FB","data_access_expiration_time","userID_FB","userID","getGroupsFB","parseLoginStatus","status","checkFBLoginState","getLoginStatus","Schedule","TimeRangeView","handleTimeRangeView","getFBAuthDetails","api","App","path","Promise","resolve","d","s","js","fjs","getElementsByTagName","createElement","src","parentNode","insertBefore","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","ReactDOM","render"],"mappings":"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","file":"static/js/main.71307569.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Homepage_container__cwfji\",\"containerInput\":\"Homepage_containerInput__2lEJ8\",\"courseInput\":\"Homepage_courseInput__1Wo5U\",\"courseSubmit\":\"Homepage_courseSubmit__3ylg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CoursesSelectedList_container__1Tmkz\",\"button\":\"CoursesSelectedList_button__2lQ6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"CourseSelected_course__3NBu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonFBLogin_button__1iqyz\"};","/*\n    Selected course\n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport style from './styles/CourseSelected.module.css';\n\nclass CourseSelected extends React.Component {\n    constructor(props) {\n        super(props);\n       \n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n   \n\n    render() {\n       \n        return (\n        <div className={style.course}>\n            {this.props.courseID}\n        </div>\n        );\n      \n    }\n}\n\nexport default CourseSelected;","/*\n    List containing selected selected courses represented by {CourseSelected}\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport style from './styles/CoursesSelectedList.module.css';\nimport CourseSelected from './CourseSelected.js';\nimport {\n    Link\n} from \"react-router-dom\";\nclass CoursesSelectedList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: this.props.listCourseIDs\n        }\n    }\n\n    render() {\n        return (\n            <div className = {style.container} id = \"coursesSelectedList\">\n                <h1>Your selected courses</h1>\n                <div>\n                    {this.props.selectedCourses.map(function (courseID) {\n                        return <CourseSelected courseID = {courseID} ></CourseSelected>\n                    })}\n                </div>\n                <Link className = {style.button} onClick = {this.props.handleGenerate} to = \"/schedule\">\n                    Schedule\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default CoursesSelectedList;","/*\n    Drop down list of course name suggestions\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\n//import style from './styles/CourseNameRecommendation.module.css';\n\n\nclass CourseNameRecommendation extends React.Component {\n    \n    constructor (props) {\n        super(props);\n        console.log(\"render\");\n\n        this.state = {\n            recommendedCourseIDs: null,\n\n        }\n    }\n\n    // O(k) where k is length of courseID\n    // courseID is the user input\n    // listCourseIDs takes in the courseID\n    recommendSearch (listCourseIDs, courseID) {\n        var courseIDsRecommended = [];\n        let mappedResults = [];\n\n        if (courseID != undefined || courseID != null) {\n\n            // recommend if there is at least one character in input\n            if (courseID[0] != undefined) {\n\n                // mapperResults is an array of \"matched\" courses (from API) by the user input \n                mappedResults = listCourseIDs[courseID];\n                // console.log(\"listCourseIDs: \" + listCourseIDs);\n                // console.log(\"courseID: \" + courseID);\n\n\n                if (mappedResults != undefined) {\n\n                    let resultsMaxDisplay = 5;\n                    \n                    // lower maximum results length if one specified is greater than what's possible\n                    if (resultsMaxDisplay > mappedResults.length)\n                        resultsMaxDisplay = mappedResults.length;\n\n                    /* DEBUG: list all info */\n                    // console.log(\"resultsMaxDisplay: \", resultsMaxDisplay)\n                    // console.log(\"mappedResults:\", mappedResults)\n                    // console.log(\"mappedResults.length: \", mappedResults.length)\n                    // console.log(\"mappedResults[0]: \" + mappedResults[0]);\n                    // console.log(\"mappedResults[0].course_id: \" + mappedResults[0].course_id);\n\n                    let i = 0;\n                    /* add recommended courseIDs to list by amount specified by resultsMaxDisplay*/\n                    while (courseIDsRecommended.length < resultsMaxDisplay && i < mappedResults.length) {\n                        // console.log(\"i: \", i);\n                        /* break if i is equal to the length of mappedResults */\n                        if (i >= mappedResults.length)\n                            break; \n\n                        let courseId = mappedResults[i].course_id;\n                        console.log(\"mappedResults:\", mappedResults);\n\n                        /* check if the courseId already exists in courseIDsRecommended */\n                        let doesNotExist = true;\n                        for (let j = 0; j < courseIDsRecommended.length; j++) {\n\n                            if (courseIDsRecommended[j] == courseId) {\n                                doesNotExist = false;\n                                break;\n                            }\n                        }\n\n                        /* push to recommended list if entry does not yet exist */\n                        if (doesNotExist) {\n                            courseIDsRecommended.push(courseId);\n                        }\n                        i++;\n                    }\n\n                }\n                else {\n                    courseIDsRecommended = [];\n                }\n               \n            }\n            else {\n                courseIDsRecommended = [];\n            }\n        }\n        else {\n            courseIDsRecommended = [];\n        }\n\n        return courseIDsRecommended;\n\n    }\n\n    \n\n    render() {\n\n        let currentInput = this.props.currentInput;\n\n        let listCourseIDs = this.props.listCourseIDs;\n\n        var recommendedCourseIDs = this.recommendSearch(listCourseIDs, currentInput);\n\n        console.log(\"recommendedCourseIDs: \" + recommendedCourseIDs);\n        \n        return(\n            <datalist id=\"recommendedCourseIDs\">\n                {recommendedCourseIDs.map(function (id) {\n                    return <option key={id} value={id} ></option>\n                })}\n            </datalist>\n        );\n    }\n\n}\nexport default CourseNameRecommendation;","/*\n    Pages: Home page\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport CoursesSelectedList from './views/CoursesSelectedList.js';\nimport CourseNameRecommendation from './views/CourseNameRecommendation.js';\nimport style from './views/styles/Homepage.module.css';\n\n/* scripts */\n\nclass Homepage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: null, // all course IDs in semester catalog (mapped first letter)\n            currentInput: null,\n            recommendedCourseIDs: null,\n            selectedCourses: [],\n            checkSameID: true\n        }\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /*\n     * handleCheckID\n     * checks if user is entering a valid courseID.\n     * effect: sets checkSameID to false if multiple courses with different ID \n     *          is found, meaning that the user hasn't entered the exact courseID\n     */\n    handleCheckID(mappedResults) {\n        // Debug purpose\n        console.log(\"mappedResults length: \" + mappedResults.length);\n        console.log(\"checkSameID: \" + this.state.checkSameID);\n        console.log(mappedResults[0]);\n        // console.log(mappedResults[1]);\n        // console.log(mappedResults[0].course_id == mappedResults[1].course_id);\n\n        \n        let checkID = mappedResults[0].course_id;\n\n        // checks if the user input is a valid courseID\n        for (var i = 0; i < mappedResults.length; i++)\n        {\n            console.log(this.state.checkSameID);\n            console.log(\"the length of mappedReusults:\" + mappedResults.length);\n            if (mappedResults[i].course_id !== checkID)\n            {\n                console.log(\"it went in here\");\n                // prevent user from adding incomplete course ID \n                this.setState({\n                    checkSameID: false\n                })\n                break;\n            }\n            console.log(this.state.checkSameID);\n\n        }\n\n    }\n\n    // handles the add function. prevents user from adding non-existing courseID\n    async handleAdd(event) {\n        console.log(\"the beginning state: \" + this.state.checkSameID);\n        //prevent default event handler\n        event.preventDefault();\n        let nameField = document.getElementById(\"input\");\n        let mappedResults = this.state.listCourseIDs[this.state.currentInput];\n        // checks if user input is valid\n        if (mappedResults !== undefined)\n        {\n            // needs checkSameID to be up to date. always.\n            await this.handleCheckID(mappedResults);\n            // if(this.state.checkSameID && mappedResults.length > 1)\n            // {\n            //     return <Popup \n            //     trigger={<div className=\"popUp\">Add</div>} \n            //     position=\"right top\"\n            //     on=\"hover\"\n            //     closeOnDocumentClick\n            //     mouseLeaveDelay={300}\n            //     mouseEnterDelay={0}\n            //     contentStyle={{ padding: \"0px\", border: \"none\" }}\n            //     arrow={false} >\n\n                    \n            //     </Popup>;\n            // }\n            // console.log(\"selectedCourses: \" + this.state.selectedCourses);\n            // console.log(\"include? \" + ( (this.state.selectedCourses.includes(mappedResults[0].course_id))));\n            if (this.state.checkSameID && (this.state.selectedCourses.includes(mappedResults[0].course_id)))\n            {\n                window.alert(\"This course has already been added!\");\n            }\n            else if (this.state.checkSameID || mappedResults.length === 1)\n            {\n                let name = this.state.currentInput.toUpperCase(); // get user input\n\n                // UPDATE STATE selectedCourses \n                var arrayJoined = this.state.selectedCourses.concat(name);\n                this.setState({ selectedCourses: arrayJoined });\n\n                nameField.value = \"\";\n            }\n            else{\n                console.log(\"here 2\");\n                window.alert(\"Please enter a VALID COURSE ID!\");\n                console.log(\"alerts here\");\n                // resets the state\n                this.setState({\n                    checkSameID: true\n                })\n            }\n        }\n        else{\n            console.log(\"here 1's map: \" + mappedResults);\n            console.log(\"here 1\");\n            window.alert(\"Please enter a VALID COURSE ID!\");\n        }\n\n    }\n\n    handleGenerate() {\n        var selectedCourses = this.state.selectedCourses;\n        console.log(\"handling generate\");\n        console.log(\"selectedCourses: \", selectedCourses);\n    }\n\n    componentDidMount() {\n        // initialize {listCourseIDs} in this component's state\n        this.getListCourseIDs();\n\n    }\n    \n    async getListCourseIDs() {\n        var API_URL = process.env.REACT_APP_API_URL + \"/courses/alg/search-table\";\n        fetch(API_URL)\n            .then(\n                (response) => response.json()\n            )\n            .then(result => {\n                //if the request is valid\n                this.setState({\n                    listCourseIDs: result.data\n                });\n            },\n            (error) => {\n                console.log(\"error\", error);\n        });\n    }\n\n    /* CourseID input scripts */\n\n    // todo: link\n    handleChange() {\n        console.log(\"handling change\");\n        let nameField = document.getElementById(\"input\");\n        let name = nameField.value.toLowerCase(); // get user input\n        this.setState((state) => ({ currentInput: name })); // update state (currentInput)\n    }\n\n    render() {\n        /* asynchronously render home page after getting courseIDs*/\n        if (this.state.listCourseIDs == null) {\n            // render loading state...\n            return (\n                <div className={style.container}>\n                    Loading...\n                </div>\n            );\n        }\n        else {\n            // render real UI..\n            return (\n                <div className={style.container}>\n                    \n                    <CoursesSelectedList handleGenerate = {this.handleGenerate.bind(this)} selectedCourses={this.state.selectedCourses} listCourseIDs = {this.state.listCourseIDs}>\n                        <input type = \"submit\"></input>\n                    </CoursesSelectedList>\n                    <div className={style.containerInput}>\n                        <h1>Choose a course</h1>\n                        <div>\n                            <form onSubmit={this.handleAdd}>\n                                <div>\n                                    <input onChange={this.handleChange} list='recommendedCourseIDs' id=\"input\" className={style.courseInput} type=\"text\" autoComplete=\"off\" placeholder=\"COMP-0015\" />\n                                    <CourseNameRecommendation listCourseIDs = {this.state.listCourseIDs} currentInput = {this.state.currentInput}></CourseNameRecommendation>\n                                </div>\n                                <div>\n                                    <input className={style.courseSubmit} type=\"submit\" value=\"Add\" />\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Homepage;","/*\n *\n *\n */\n\nimport React from 'react';\n\n\nclass Event extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n        }\n\n    }\n   \n\n\n    render() {\n        let weekTitle = \"\";\n        let week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        for (let i = 0; i < 5; i++)\n        {\n            weekTitle += \"<div className=\\\"\" + week[i] + \"\\\" >\"+ week[i] + \"</div>\";\n        }\n        return(\n            <div className=\"calendar\">\n           \n                <div className=\"weekTitle\">\n                    <div className=\"blank\">\n\n                    </div>\n                    {weekTitle}\n\n                </div>\n                <div className=\"events\">\n\n                </div>\n\n            </div>\n\n        )\n\n\n    }\n}\nexport default Event;","/* Written by Jeremy (9/1/2021)\n    Facebook Login button\n*/\n\nimport React from 'react';\nimport style from './styles/ButtonFBLogin.module.css';\n\nclass ButtonFBLogin extends React.Component {\n    constructor (props) {\n        /* use callbacks from parent to get states from this child */\n        super(props);\n\n        this.state = {\n            accessToken_FB: undefined,\n            dataAccessExpirationTime_FB: undefined,\n            userID_FB: undefined\n        }\n\n        this.handleFBLogin = this.handleFBLogin.bind(this);\n        this.parseLoginStatus = this.parseLoginStatus.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this);\n    }\n    \n    /* open Facebook Login pop up and prompt user login */\n    handleFBLogin = (callback) => {\n        window.FB.login(function (responseLogin) {\n\n            if (responseLogin.authResponse) {\n\n                /* FB authorization is complete */\n\n                callback(responseLogin.authResponse);\n\n            }\n            else {\n                console.log(\"authResponse is undefined\");\n            }\n        })\n    }\n\n    /* parse authorization response from FB and update component's states with them */\n    handleStatusChange = (authResponse) => {\n\n        this.setState({\n            accessToken_FB: authResponse.accessToken,\n            dataAccessExpirationTime_FB: authResponse.data_access_expiration_time,\n            userID_FB: authResponse.userID\n        })\n\n        this.props.getGroupsFB();\n    }\n    \n    // parse response for login from FB.getLoginStatus()\n    parseLoginStatus = (response) => {\n\n        // check facebook login status\n        if (response.status === \"unknown\") {\n\n            /* Not already logged in to facebook, start login to FB */\n\n            this.handleFBLogin(\n                // Update component's states with Facebook auth details\n                (authResponse) => this.handleStatusChange(authResponse)\n            );\n\n        }\n        else if (response.status === \"connected\") {\n\n            /* Logged in to FB */\n\n            // Update component's states with Facebook auth details\n            this.handleStatusChange(response.authResponse);\n        }\n    }\n\n    /* check if web page is already logged in to Facebook */\n    checkFBLoginState = () => {\n\n        window.FB.getLoginStatus (  \n            (response) => this.parseLoginStatus(response)\n        );\n    }\n\n    render () {\n\n        if (window.FB !== undefined ) {\n            console.log(\"window.FB is defined!!!!!!!!!!1\")\n        }\n\n        return (\n            <div>\n                <div>\n                    <button onClick={this.checkFBLoginState} className={style.button}>\n                        Login to Facebook\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ButtonFBLogin;","/*\n * \n */\n\nimport React from 'react';\nimport Event from './Event.js';\nimport ButtonFBLogin from './views/ButtonFBLogin.js';\n\nclass Schedule extends React.Component {\n\n    constructor (props) {\n\n        super(props);\n\n        this.state = {\n            TimeRangeView: false,\n            accessToken_FB: undefined,\n            dataAccessExpirationTime_FB: undefined,\n            userID_FB: undefined\n        };\n\n        this.handleTimeRangeView = this.handleTimeRangeView.bind(this);\n        this.getFBAuthDetails = this.getFBAuthDetails.bind(this);\n        this.getGroupsFB = this.getGroupsFB.bind(this);\n    }\n    \n    getFBAuthDetails (state) {\n        this.setState({\n            accessToken_FB: state.accessToken_FB,\n            dataAccessExpirationTime_FB:  state.dataAccessExpirationTime_FB,\n            userID_FB: state.userID_FB\n        })\n\n        this.getGroupsFB();\n    }\n\n    getGroupsFB () {\n        /*\n        var API_URL = \"https://graph.facebook.com/\"+ this.state.userID_FB + \"/groups\";\n\n        fetch(API_URL)\n        .then(\n            (response) => response.json()\n        )\n        .then(result => {\n            //if the request is valid\n            console.log(result);\n        },\n        (error) => {\n            console.log(\"error\", error);\n        });\n        */\n\n        window.FB.api(\n            \"/\" + this.state.userID_FB + \"/groups\", \n            function (response) {\n\n                if (response & !response.error) {\n\n                    console.log(\"response: \", response);\n                    \n                }\n            }\n        )\n\n    }\n\n    handleTimeRangeView() {\n  \n        this.setState({\n            TimeRangeView: !this.state.TimeRangeView\n        });\n        console.log(this.TimeRangeView);\n    \n    }\n\n    render() {\n        return (\n            <main>\n                <h1>\n                    Schedule!\n                </h1>\n                <div className=\"navbar\">\n                    <button onClick={this.handleTimeRangeView}>{`${this.state.TimeRangeView ? 'My Schedule' : 'Time Range Selector'}`}</button>\n\n                </div>\n                \n                <div>\n                    <Event />\n                </div>\n                <div>\n                    <ButtonFBLogin getGroupsFB = {this.getGroupsFB} ></ButtonFBLogin>\n                </div>\n            </main>\n            \n        )\n\n    }\n}\nexport default Schedule;","/* \n    Main react app \n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport Homepage from \"./components/Homepage.js\";\nimport Schedule from \"./components/Schedule.js\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Calendar from './components/Event.js';\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/schedule\">\n                        <Schedule />\n                    </Route>\n                    <Route path=\"/\">\n                        <Homepage />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}","/* Written by Jeremy Jung (9/1/2021)\n    async get Facebook javascript SDK\n*/\n\nconst facebookAppId = process.env.REACT_APP_FACEBOOK_APP_ID;\n\nexport default function initFBSDK () {\n    return new Promise(resolve => {\n        (function (d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) { return; }\n            js = d.createElement(s); js.id = id;\n            js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n            fjs.parentNode.insertBefore(js, fjs);\n        }(document, 'script', 'facebook-jssdk'));\n\n        window.fbAsyncInit = function () {\n            window.FB.init({\n                appId: facebookAppId,\n                cookie: true,\n                xfbml: true,\n                version: 'v9.0'\n            });\n            \n            // check if user is logged in to facebook\n            window.FB.getLoginStatus(({ authResponse }) => {\n\n                if (authResponse) {\n                    console.log(\"Already logged in to facebook\");\n                } else {\n                    console.log(\"Not logged in to facebook\");\n                    resolve();\n                }\n\n            });\n\n            window.FB.AppEvents.logPageView();\n        }\n\n    })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\nimport initFBSDK from './components/views/scripts/fb.js';\n\n/* load React App after FB SDK is received */\ninitFBSDK().then(\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n);"],"sourceRoot":""}