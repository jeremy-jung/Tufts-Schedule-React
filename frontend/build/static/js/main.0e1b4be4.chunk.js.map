{"version":3,"sources":["components/views/styles/Homepage.module.css","components/views/styles/CoursesSelectedList.module.css","components/views/styles/CourseSelected.module.css","components/views/styles/OptionsMainList.module.css","components/views/styles/OptionMainButton.module.css","components/views/styles/ButtonFBLogin.module.css","components/views/CourseSelected.js","components/views/CoursesSelectedList.js","components/views/CourseNameRecommendation.js","components/views/OptionMainButton.js","components/views/OptionsMainList.js","components/views/ButtonFBLogin.js","components/Homepage.js","components/Event.js","components/Schedule.js","App.js","components/views/scripts/fb.js","index.js"],"names":["module","exports","CourseSelected","props","event","preventDefault","className","style","course","this","courseID","React","Component","CoursesSelectedList","state","listCourseIDs","container","id","selectedCourses","map","button","onClick","handleGenerate","to","CourseNameRecommendation","console","log","recommendedCourseIDs","courseIDsRecommended","mappedResults","undefined","resultsMaxDisplay","length","i","courseId","course_id","doesNotExist","j","push","currentInput","recommendSearch","value","OptionMainButton","option","ButtonFBLogin","checkFBLoginState","window","FB","getLoginStatus","response","Homepage","checkSameID","handleAdd","bind","handleChange","checkID","setState","nameField","document","getElementById","handleCheckID","includes","alert","name","toUpperCase","arrayJoined","concat","getListCourseIDs","process","fetch","then","json","result","data","error","toLowerCase","type","containerInput","onSubmit","onChange","list","courseInput","autoComplete","placeholder","courseSubmit","Event","weekTitle","week","Schedule","TimeRangeView","handleTimeRangeView","App","path","facebookAppId","Promise","resolve","d","s","js","fjs","getElementsByTagName","createElement","src","parentNode","insertBefore","fbAsyncInit","init","appId","cookie","xfbml","version","authResponse","AppEvents","logPageView","ReactDOM","render"],"mappings":"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","file":"static/js/main.0e1b4be4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Homepage_container__cwfji\",\"containerInput\":\"Homepage_containerInput__2lEJ8\",\"courseInput\":\"Homepage_courseInput__1Wo5U\",\"courseSubmit\":\"Homepage_courseSubmit__3ylg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CoursesSelectedList_container__1Tmkz\",\"button\":\"CoursesSelectedList_button__2lQ6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"CourseSelected_course__3NBu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OptionsMainList_container__1lS8U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"OptionMainButton_button__3s6JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonFBLogin_button__1iqyz\"};","/*\n    Selected course\n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport style from './styles/CourseSelected.module.css';\n\nclass CourseSelected extends React.Component {\n    constructor(props) {\n        super(props);\n       \n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n   \n\n    render() {\n       \n        return (\n        <div className={style.course}>\n            {this.props.courseID}\n        </div>\n        );\n      \n    }\n}\n\nexport default CourseSelected;","/*\n    List containing selected selected courses represented by {CourseSelected}\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport style from './styles/CoursesSelectedList.module.css';\nimport CourseSelected from './CourseSelected.js';\nimport {\n    Link\n} from \"react-router-dom\";\nclass CoursesSelectedList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: this.props.listCourseIDs\n        }\n    }\n\n    render() {\n        return (\n            <div className = {style.container} id = \"coursesSelectedList\">\n                <h1>Your selected courses</h1>\n                <div>\n                    {this.props.selectedCourses.map(function (courseID) {\n                        return <CourseSelected courseID = {courseID} ></CourseSelected>\n                    })}\n                </div>\n                <Link className = {style.button} onClick = {this.props.handleGenerate} to = \"/schedule\">\n                    Schedule\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default CoursesSelectedList;","/*\n    Drop down list of course name suggestions\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\n//import style from './styles/CourseNameRecommendation.module.css';\n\n\nclass CourseNameRecommendation extends React.Component {\n    \n    constructor (props) {\n        super(props);\n        console.log(\"render\");\n\n        this.state = {\n            recommendedCourseIDs: null,\n\n        }\n    }\n\n    // O(k) where k is length of courseID\n    // courseID is the user input\n    // listCourseIDs takes in the courseID\n    recommendSearch (listCourseIDs, courseID) {\n        var courseIDsRecommended = [];\n        let mappedResults = [];\n\n        if (courseID != undefined || courseID != null) {\n\n            // recommend if there is at least one character in input\n            if (courseID[0] != undefined) {\n\n                // mapperResults is an array of \"matched\" courses (from API) by the user input \n                mappedResults = listCourseIDs[courseID];\n                // console.log(\"listCourseIDs: \" + listCourseIDs);\n                // console.log(\"courseID: \" + courseID);\n\n\n                if (mappedResults != undefined) {\n\n                    let resultsMaxDisplay = 5;\n                    \n                    // lower maximum results length if one specified is greater than what's possible\n                    if (resultsMaxDisplay > mappedResults.length)\n                        resultsMaxDisplay = mappedResults.length;\n\n                    /* DEBUG: list all info */\n                    // console.log(\"resultsMaxDisplay: \", resultsMaxDisplay)\n                    // console.log(\"mappedResults:\", mappedResults)\n                    // console.log(\"mappedResults.length: \", mappedResults.length)\n                    // console.log(\"mappedResults[0]: \" + mappedResults[0]);\n                    // console.log(\"mappedResults[0].course_id: \" + mappedResults[0].course_id);\n\n                    let i = 0;\n                    /* add recommended courseIDs to list by amount specified by resultsMaxDisplay*/\n                    while (courseIDsRecommended.length < resultsMaxDisplay && i < mappedResults.length) {\n                        // console.log(\"i: \", i);\n                        /* break if i is equal to the length of mappedResults */\n                        if (i >= mappedResults.length)\n                            break; \n\n                        let courseId = mappedResults[i].course_id;\n                        console.log(\"mappedResults:\", mappedResults);\n\n                        /* check if the courseId already exists in courseIDsRecommended */\n                        let doesNotExist = true;\n                        for (let j = 0; j < courseIDsRecommended.length; j++) {\n\n                            if (courseIDsRecommended[j] == courseId) {\n                                doesNotExist = false;\n                                break;\n                            }\n                        }\n\n                        /* push to recommended list if entry does not yet exist */\n                        if (doesNotExist) {\n                            courseIDsRecommended.push(courseId);\n                        }\n                        i++;\n                    }\n\n                }\n                else {\n                    courseIDsRecommended = [];\n                }\n               \n            }\n            else {\n                courseIDsRecommended = [];\n            }\n        }\n        else {\n            courseIDsRecommended = [];\n        }\n\n        return courseIDsRecommended;\n\n    }\n\n    \n\n    render() {\n\n        let currentInput = this.props.currentInput;\n\n        let listCourseIDs = this.props.listCourseIDs;\n\n        var recommendedCourseIDs = this.recommendSearch(listCourseIDs, currentInput);\n\n        console.log(\"recommendedCourseIDs: \" + recommendedCourseIDs);\n        \n        return(\n            <datalist id=\"recommendedCourseIDs\">\n                {recommendedCourseIDs.map(function (id) {\n                    return <option key={id} value={id} ></option>\n                })}\n            </datalist>\n        );\n    }\n\n}\nexport default CourseNameRecommendation;","/*\n    Main button that indicate an option for an algorithm\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport style from './styles/OptionMainButton.module.css';\n\nclass OptionMainButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            option: \"default\"\n        };\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <button className={style.button}>\n                {this.state.option}\n            </button>\n        );\n    }\n}\n\nexport default OptionMainButton;","/*\n    List of buttons on the top right corner listing possible options for algorithms\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport style from './styles/OptionsMainList.module.css';\nimport OptionMainButton from './OptionMainButton.js';\n\nclass OptionsMainList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className={style.container}>\n                <OptionMainButton></OptionMainButton>\n                <OptionMainButton></OptionMainButton>\n                <OptionMainButton></OptionMainButton>\n            </div>\n        );\n    }\n}\n\nexport default OptionsMainList;","/* Written by Jeremy (9/1/2021)\n    Facebook Login button\n*/\n\nimport React from 'react';\nimport style from './styles/ButtonFBLogin.module.css';\n\nclass ButtonFBLogin extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            FB: undefined\n        }\n    }\n\n    checkFBLoginState = () => {\n        window.FB.getLoginStatus(function(response) {\n            console.log(\"response: \", response);\n            console.log(window.FB);\n            // window.FB.statusChangeCallback(response);\n        })\n    }\n\n    render () {\n        if (window.FB != undefined ) {\n            console.log(\"window.FB is defined!!!!!!!!!!1\")\n            console.log(window.FB);\n        }\n\n        return (\n            <div>\n                <div>\n                    <button onClick = {this.checkFBLoginState} className = {style.button}>\n                        Login to Facebook\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ButtonFBLogin;","/*\n    Pages: Home page\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport Popup from 'reactjs-popup';\nimport CoursesSelectedList from './views/CoursesSelectedList.js';\nimport CourseNameRecommendation from './views/CourseNameRecommendation.js';\nimport OptionsMainList from './views/OptionsMainList.js';\nimport ButtonFBLogin from './views/ButtonFBLogin.js';\nimport style from './views/styles/Homepage.module.css';\n\n/* scripts */\n\nclass Homepage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: null, // all course IDs in semester catalog (mapped first letter)\n            currentInput: null,\n            recommendedCourseIDs: null,\n            selectedCourses: [],\n            checkSameID: true\n        }\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n\n    /*\n     * handleCheckID\n     * checks if user is entering a valid courseID.\n     * effect: sets checkSameID to false if multiple courses with different ID \n     *          is found, meaning that the user hasn't entered the exact courseID\n    */\n\n    handleCheckID(mappedResults) {\n        // Debug purpose\n        console.log(\"mappedResults length: \" + mappedResults.length);\n        console.log(\"checkSameID: \" + this.state.checkSameID);\n        console.log(mappedResults[0]);\n        // console.log(mappedResults[1]);\n        // console.log(mappedResults[0].course_id == mappedResults[1].course_id);\n\n        \n        let checkID = mappedResults[0].course_id;\n\n        // checks if the user input is a valid courseID\n        for (var i = 0; i < mappedResults.length; i++)\n        {\n            console.log(this.state.checkSameID);\n            console.log(\"the length of mappedReusults:\" + mappedResults.length);\n            if (mappedResults[i].course_id != checkID)\n            {\n                console.log(\"it went in here\");\n                // prevent user from adding incomplete course ID \n                this.setState({\n                    checkSameID: false\n                })\n                break;\n            }\n            console.log(this.state.checkSameID);\n\n        }\n        \n\n    }\n\n    // handles the add function. prevents user from adding non-existing courseID\n    async handleAdd(event) {\n        console.log(\"the beginning state: \" + this.state.checkSameID);\n        //prevent default event handler\n        event.preventDefault();\n        let nameField = document.getElementById(\"input\");\n        let mappedResults = this.state.listCourseIDs[this.state.currentInput];\n        // checks if user input is valid\n        if (mappedResults != undefined)\n        {\n            // needs checkSameID to be up to date. always.\n            await this.handleCheckID(mappedResults);\n            // if(this.state.checkSameID && mappedResults.length > 1)\n            // {\n            //     return <Popup \n            //     trigger={<div className=\"popUp\">Add</div>} \n            //     position=\"right top\"\n            //     on=\"hover\"\n            //     closeOnDocumentClick\n            //     mouseLeaveDelay={300}\n            //     mouseEnterDelay={0}\n            //     contentStyle={{ padding: \"0px\", border: \"none\" }}\n            //     arrow={false} >\n\n                    \n            //     </Popup>;\n            // }\n            // console.log(\"selectedCourses: \" + this.state.selectedCourses);\n            // console.log(\"include? \" + ( (this.state.selectedCourses.includes(mappedResults[0].course_id))));\n            if (this.state.checkSameID && (this.state.selectedCourses.includes(mappedResults[0].course_id)))\n            {\n                window.alert(\"This course has already been added!\");\n            }\n            else if (this.state.checkSameID || mappedResults.length == 1)\n            {\n                let name = this.state.currentInput.toUpperCase(); // get user input\n\n                // UPDATE STATE selectedCourses \n                var arrayJoined = this.state.selectedCourses.concat(name);\n                this.setState({ selectedCourses: arrayJoined });\n\n                nameField.value = \"\";\n            }\n            else{\n                console.log(\"here 2\");\n                window.alert(\"Please enter a VALID COURSE ID!\");\n                console.log(\"alerts here\");\n                // resets the state\n                this.setState({\n                    checkSameID: true\n                })\n            }\n        }\n        else{\n            console.log(\"here 1's map: \" + mappedResults);\n            console.log(\"here 1\");\n            window.alert(\"Please enter a VALID COURSE ID!\");\n        }\n\n        \n    }\n\n    handleGenerate() {\n        var selectedCourses = this.state.selectedCourses;\n        console.log(\"handling generate\");\n    }\n\n    componentDidMount() {\n        // initialize {listCourseIDs} in this component's state\n        this.getListCourseIDs();\n\n    }\n    \n    async getListCourseIDs() {\n        var API_URL = process.env.REACT_APP_API_URL + \"/courses/alg/search-table\";\n        fetch(API_URL)\n            .then(\n                (response) => response.json()\n            )\n            .then(result => {\n                //if the request is valid\n                this.setState({\n                    listCourseIDs: result.data\n                });\n            },\n            (error) => {\n                console.log(\"error\", error);\n        });\n    }\n\n    /* CourseID input scripts */\n\n    // todo: link\n    handleChange() {\n        console.log(\"handling change\");\n        let nameField = document.getElementById(\"input\");\n        let name = nameField.value.toLowerCase(); // get user input\n        this.setState((state) => ({ currentInput: name })); // update state (currentInput)\n    }\n\n\n    render() {\n        /* asynchronously render home page after getting courseIDs*/\n        if (this.state.listCourseIDs == null) {\n            // render loading state...\n            return (\n                <div className={style.container}>\n                    Loading...\n                </div>\n            );\n        }\n        else {\n            // render real UI..\n            let pop;\n                return (\n                    <div className={style.container}>\n                        \n                        <CoursesSelectedList handleGenerate = {this.handleGenerate.bind(this)} selectedCourses={this.state.selectedCourses} listCourseIDs = {this.state.listCourseIDs}>\n                            <input type = \"submit\"></input>\n                        </CoursesSelectedList>\n                        <div className={style.containerInput}>\n                            <h1>Choose a course</h1>\n                            <div>\n                                <form onSubmit={this.handleAdd}>\n                                    <div>\n                                        <input onChange={this.handleChange} list='recommendedCourseIDs' id=\"input\" className={style.courseInput} type=\"text\" autoComplete=\"off\" placeholder=\"COMP-0015\" />\n                                        <CourseNameRecommendation listCourseIDs = {this.state.listCourseIDs} currentInput = {this.state.currentInput}></CourseNameRecommendation>\n                                    </div>\n                                    <div>\n                                        <input className={style.courseSubmit} type=\"submit\" value=\"Add\" />\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        <ButtonFBLogin></ButtonFBLogin>\n\n                    </div>\n                );\n        }\n    }\n}\n\nexport default Homepage;","/*\n *\n *\n */\n\nimport React from 'react';\n\n\nclass Event extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n        }\n\n    }\n   \n\n\n    render() {\n        let weekTitle = \"\";\n        let week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        for (let i = 0; i < 5; i++)\n        {\n            weekTitle += \"<div className=\\\"\" + week[i] + \"\\\" >\"+ week[i] + \"</div>\";\n        }\n        return(\n            <div className=\"calendar\">\n           \n                <div className=\"weekTitle\">\n                    <div className=\"blank\">\n\n                    </div>\n                    {weekTitle}\n\n                </div>\n                <div className=\"events\">\n\n                </div>\n\n            </div>\n\n        )\n\n\n    }\n}\nexport default Event;","/*\n * \n */\n\nimport React from 'react';\nimport Event from './Event.js';\n\n\nclass Schedule extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            TimeRangeView: false,\n\n        };\n\n        this.handleTimeRangeView = this.handleTimeRangeView.bind(this);\n\n    }\n\n    handleTimeRangeView() {\n  \n        this.setState({\n            TimeRangeView: !this.state.TimeRangeView\n        });\n        console.log(this.TimeRangeView);\n    \n    }\n\n   \n\n\n    render() {\n\n        \n\n        return (\n            <main>\n                <h1>\n                    Schedule!\n                </h1>\n                <div className=\"navbar\">\n                    <button onClick={this.handleTimeRangeView}>{`${this.state.TimeRangeView ? 'My Schedule' : 'Time Range Selector'}`}</button>\n\n                </div>\n                \n                <div>\n                    <Event />\n                </div>\n            </main>\n            \n        )\n\n    }\n}\nexport default Schedule;","/* \n    Main react app \n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport Homepage from \"./components/Homepage.js\";\nimport Schedule from \"./components/Schedule.js\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Calendar from './components/Event.js';\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/schedule\">\n                        <Schedule />\n                    </Route>\n                    <Route path=\"/\">\n                        <Homepage />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}","/* Written by Jeremy Jung (9/1/2021)\n    async get Facebook javascript SDK\n*/\n\nconst facebookAppId = process.env.REACT_APP_FACEBOOK_APP_ID;\n\nexport default function initFBSDK () {\n    return new Promise(resolve => {\n        (function (d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) { return; }\n            js = d.createElement(s); js.id = id;\n            js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n            fjs.parentNode.insertBefore(js, fjs);\n        }(document, 'script', 'facebook-jssdk'));\n\n        window.fbAsyncInit = function () {\n            console.log(facebookAppId);\n            window.FB.init({\n                appId: facebookAppId,\n                cookie: true,\n                xfbml: true,\n                version: 'v9.0'\n            });\n            \n            // check if user is logged in to facebook\n            window.FB.getLoginStatus(({ authResponse }) => {\n\n                if (authResponse) {\n                    console.log(\"Already logged in to facebook\");\n                } else {\n                    console.log(\"Not logged in to facebook\");\n                    resolve();\n                }\n\n            });\n\n            window.FB.AppEvents.logPageView();\n        }\n\n    })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\nimport initFBSDK from './components/views/scripts/fb.js';\n\n/* load React App after FB SDK is received */\ninitFBSDK().then(\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n);"],"sourceRoot":""}