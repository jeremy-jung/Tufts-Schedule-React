{"version":3,"sources":["components/views/calendars/calendarStyles/Day.module.css","components/views/styles/Popup.module.css","components/views/styles/CourseSchedule.module.css","components/views/styles/CoursesSelectedList.module.css","components/views/calendars/calendarStyles/Week.module.css","components/views/styles/CourseSelected.module.css","components/views/styles/Homepage.module.css","components/views/calendars/calendarStyles/Event.module.css","components/views/styles/ButtonFBLogin.module.css","components/views/CourseDetailPop.js","components/views/CourseSelected.js","components/views/CoursesSelectedList.js","components/views/CourseNameRecommendation.js","components/views/Popup.js","components/views/calendars/Event.js","components/views/calendars/Day.js","components/views/calendars/Week.js","components/Homepage.js","components/Event.js","components/views/ButtonFBLogin.js","components/Schedule.js","App.js","components/views/scripts/fb.js","index.js"],"names":["module","exports","CourseDetailPop","props","state","showPop","closePop","bind","removeCourse","console","log","this","courseInfo","className","style","couresPopContainer","closeContainer","close","onClick","tit","course_id","course_name","type","value","overlay","React","Component","CourseSelected","popDetail","showDetail","event","preventDefault","setState","handlePop","all","coursePopDetail","popCourse","course","CoursesSelectedList","listCourseIDs","schedulePage","handleGenerate","selectedCourses","length","scheduleCondition","handleSchedule","setMessage","containerClass","popUp","popContainer","container","id","popCourseList","courseList","courseListTitle","map","pop","popButton","button","CourseNameRecommendation","recommendedCourseIDs","courseID","courseIDsRecommended","mappedResults","undefined","resultsMaxDisplay","i","courseId","doesNotExist","j","push","currentInput","recommendSearch","Popup","updateSelectedPop","popupContainer","popMap","popOptions","item","alert","alertMessage","Event","transY","eventInfo","eventStyle","eventDetail","hov","getEventHeight","getTranslate","setEventDetail","dblClick","detail","details","split","name","res","time_start","time_end","location","parseInt","substring","eventHeight","transform","height","eStyle","eventButtonHover","eventButton","onDoubleClick","setEventHover","Day","dow","timeSlots","courseSchedule","events","startTime","endTime","generateTime","createTimeSlots","onDrag","onDragEnter","pos","check","Math","floor","star","end","start","busy","st","e","et","target","backgroundColor","localeCompare","dayUpdateTimePref","timeBar","dayStyle","timeBarContainer","timeSlotTop","timeInfo","timeSlot","slot","dragDayContainer","dayTimePref","includes","draggable","dayContainer","Week","dows","postReqTime","retrievedTime","requestError","retrieveTimePref","scheduleReload","convertTimeIntToString","drag","convertSchedulePref","getRecSchedule","sortTimePref","day","time","indexOf","splice","key","sort","hours","minutes","hourString","minuteString","begin","info","_id","getObjectIDs","process","requestDetail","fetch","method","headers","body","JSON","stringify","then","response","json","result","data","error","showUnscheduled","weekStyle","dragBox","dragWeekContainer","weekContainer","Homepage","show","courses","noTimeCourse","showNoTimeCourse","checkSameID","renderSchedule","modifySearch","dragAbove","handleAdd","handleChange","closeModifySearch","handleCheckInclude","handleReload","checkID","mappedResult","nameField","document","getElementById","handleCheckID","courseToAdd","arrayJoined","concat","popSelected","message","getListCourseIDs","toLowerCase","timePref","trunc","NoTimeCourse","loadContainer","csStyle","csContainer","columnContainer","searchContainer","courseSubmit","inputContainer","onSubmit","courseInput","onChange","list","autoComplete","placeholder","courseAdd","noAlert","unscheduledBox","unscheduledBoxTitle","unscheduled","verticalContainer","storeTimePref","weekTitle","week","ButtonFBLogin","handleFBLogin","callback","window","FB","login","responseLogin","authResponse","handleStatusChange","accessToken_FB","accessToken","dataAccessExpirationTime_FB","data_access_expiration_time","userID_FB","userID","getGroupsFB","parseLoginStatus","status","checkFBLoginState","getLoginStatus","Schedule","TimeRangeView","handleTimeRangeView","getFBAuthDetails","api","App","path","Promise","resolve","d","s","js","fjs","getElementsByTagName","createElement","src","parentNode","insertBefore","fbAsyncInit","init","appId","cookie","xfbml","version","AppEvents","logPageView","ReactDOM","render"],"mappings":"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","file":"static/js/main.2dabdbfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dayContainer\":\"Day_dayContainer__28RLo\",\"dragDayContainer\":\"Day_dragDayContainer__2nZVy\",\"timeBarContainer\":\"Day_timeBarContainer__KTB6n\",\"timeSlots\":\"Day_timeSlots__PkgzF\",\"timeSlot\":\"Day_timeSlot__1ZYLH\",\"timeSlotTop\":\"Day_timeSlotTop__1anl6\",\"slot\":\"Day_slot__1RlYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Popup_overlay__1EiQX\",\"popupContainer\":\"Popup_popupContainer__25JEo\",\"popOptions\":\"Popup_popOptions__2Ji46\",\"tit\":\"Popup_tit__1-cbN\",\"closeContainer\":\"Popup_closeContainer__Uexd0\",\"close\":\"Popup_close__2_zr_\",\"couresPopContainer\":\"Popup_couresPopContainer__22HOp\",\"courseInfo\":\"Popup_courseInfo__3cd-a\",\"removeCourse\":\"Popup_removeCourse__3xR7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadContainer\":\"CourseSchedule_loadContainer__2Z2EG\",\"columnContainer\":\"CourseSchedule_columnContainer__RM2A9\",\"verticalContainer\":\"CourseSchedule_verticalContainer__192D8\",\"searchContainer\":\"CourseSchedule_searchContainer__3j92j\",\"courseInput\":\"CourseSchedule_courseInput__1k-UL\",\"courseSubmit\":\"CourseSchedule_courseSubmit__qEtOv\",\"courseAdd\":\"CourseSchedule_courseAdd__aV0Xt\",\"alert\":\"CourseSchedule_alert__3PMGQ\",\"notAlert\":\"CourseSchedule_notAlert__1L4Ho\",\"timePref\":\"CourseSchedule_timePref__3n2Vi\",\"unscheduled\":\"CourseSchedule_unscheduled__3LP_1\",\"unscheduledBox\":\"CourseSchedule_unscheduledBox__3uH4E\",\"unscheduledBoxTitle\":\"CourseSchedule_unscheduledBoxTitle__1l9X0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CoursesSelectedList_container__1Tmkz\",\"popContainer\":\"CoursesSelectedList_popContainer__161nb\",\"button\":\"CoursesSelectedList_button__2lQ6A\",\"popButton\":\"CoursesSelectedList_popButton__1G_q5\",\"courseList\":\"CoursesSelectedList_courseList__1QBMC\",\"popCourseList\":\"CoursesSelectedList_popCourseList__1V7KD\",\"courseListTitle\":\"CoursesSelectedList_courseListTitle__757CB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekContainer\":\"Week_weekContainer__3peJG\",\"dragBox\":\"Week_dragBox__1qrvY\",\"dragWeekContainer\":\"Week_dragWeekContainer__qIyem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"CourseSelected_course__3NBu-\",\"popCourse\":\"CourseSelected_popCourse__PsGFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Homepage_container__cwfji\",\"loadContainer\":\"Homepage_loadContainer___Gik2\",\"containerInput\":\"Homepage_containerInput__2lEJ8\",\"courseInput\":\"Homepage_courseInput__1Wo5U\",\"courseSubmit\":\"Homepage_courseSubmit__3ylg9\",\"alert\":\"Homepage_alert__3AioS\",\"notAlert\":\"Homepage_notAlert__mmyL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eventButton\":\"Event_eventButton___zrgi\",\"eventButtonHover\":\"Event_eventButtonHover__1vGhx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonFBLogin_button__1iqyz\"};","/*\n    CourseDetailPop\n    Created by Duncan Chang\n*/\nimport React from 'react';\nimport style from './styles/Popup.module.css';\n\n\nclass CourseDetailPop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            showPop: true,\n        }\n        this.closePop = this.closePop.bind(this);\n        this.removeCourse = this.removeCourse.bind(this);\n    }\n\n    /*  \n     *  closePop()\n     *  calls the closePop function in Homepage\n     *  calls updateSelectedPop function in Homepage to reset alertMessage\n     */ \n    async closePop()\n    {\n        console.log(\"test here:\");\n      \n        await this.props.closePop();\n        console.log(\"it's closed?\");\n\n    }\n\n    async removeCourse()\n    {\n        await this.props.removeCourse(this.props.courseInfo);\n        await this.closePop();\n    }\n   \n\n    render() {\n        \n        return (\n            <div>\n                {/* container for the rest of info */}\n                <div className={style.couresPopContainer} >\n                \n                    {/* This is the close div */}\n                    <div className={style.closeContainer} >\n                        <button className={style.close} onClick={this.closePop}>✕</button>\n                    </div>\n                    <p className={style.tit} >{this.props.courseInfo.course_id}</p>\n\n                    <div className={style.courseInfo}>\n                        {this.props.courseInfo.course_name}\n                    </div>\n\n                    \n                    <br/>\n                    <input type=\"button\" value=\"Remove From List\" className={style.removeCourse} onClick={this.removeCourse}></input>\n                    \n                </div>\n\n                <br/>\n\n                {/* // overlay div */}\n                <div className={style.overlay}></div>\n\n            </div>\n           \n            \n        );\n      \n    }\n}\n\nexport default CourseDetailPop;","/*\n    Selected course\n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport style from './styles/CourseSelected.module.css';\nimport CourseDetailPop from './CourseDetailPop'\n\nclass CourseSelected extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            popDetail: false,\n        }\n\n        this.showDetail = this.showDetail.bind(this);\n\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n    async showDetail()\n    {\n        console.log(\"it called this\");\n        await this.setState({\n            popDetail: true,\n        })\n        console.log(\"did it call, \" , this.state.popDetail);\n        await this.props.handlePop();\n        console.log(\"did it call here\");\n\n    }\n\n    async closePop()\n    {\n        await this.setState({\n            popDetail: false,\n        })\n        await this.props.closePop();\n    }\n    \n   \n\n    render() {\n        console.log(\"popDetail: \" , this.state.popDetail);\n      \n\n        return (\n            <div className={style.all}>\n\n                <div >\n                    <input type=\"button\" onClick={this.showDetail} value={this.props.courseInfo.course_id} className={this.props.coursePopDetail ? style.popCourse : style.course}/>\n                </div>  \n                \n                {this.state.popDetail ? <CourseDetailPop showDetail={()=> this.showDetail.bind(this)} courseInfo={this.props.courseInfo} closePop={this.closePop.bind(this)} removeCourse={this.props.removeCourse}></CourseDetailPop> : <div></div>}\n\n            </div>\n\n            \n            );\n        \n       \n        \n      \n    }\n}\n\nexport default CourseSelected;","/*\n    List containing selected selected courses represented by {CourseSelected}\n    Created by Jeremy Jung, Duncan Chang\n*/\n\nimport React from 'react';\nimport style from './styles/CoursesSelectedList.module.css';\nimport CourseSelected from './CourseSelected.js';\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nclass CoursesSelectedList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: this.props.listCourseIDs,\n            coursePopDetail: false,\n            schedulePage: false,\n        }\n\n        this.handleGenerate = this.handleGenerate.bind(this);\n\n    }\n\n    async handlePop()\n    {\n        console.log(\"coursePopDetail before: \" , this.state.coursePopDetail);\n\n        await this.setState({\n            coursePopDetail: true,\n        })\n        console.log(\"coursePopDetail after: \" , this.state.coursePopDetail);\n    }\n    \n    async closePop()\n    {\n        await this.setState({\n            coursePopDetail: false,\n        })\n    }\n\n    async scheduleCondition(){\n        if (this.props.selectedCourses.length > 0)\n        {\n            await this.setState({\n                schedulePage: true,\n            })\n        }\n    }\n\n    // async removeCourse(item)\n    // {\n    //     await this.props.removeCourse(item);\n    // }\n\n    async handleGenerate() {\n        await this.scheduleCondition();\n\n        if (this.state.schedulePage)\n        {\n            this.props.handleGenerate();\n            // calls this from props and post request rec schedule\n            this.props.handleSchedule(true);\n        }\n        else \n        {\n            this.props.setMessage(\"*** Please Add Course to List ***\");\n        }\n    }\n\n    render() {\n      \n        \n        console.log(\"my seleceted courses: \" , this.props.selectedCourses);\n        let containerClass;\n        // checks which css class the container should follow\n        if (this.state.coursePopDetail)\n        {\n            containerClass = false;\n        }\n        else\n        {\n            containerClass = this.props.popUp;\n        }\n        \n        console.log(\"test this: \" , this.state.coursePopDetail);\n        console.log(\"containerClass: \", containerClass);\n        return (\n            <div className = {containerClass ? style.popContainer : style.container}id = \"coursesSelectedList\">\n                {/* <h2>Your selected courses</h2> */}\n                <br/>\n                <div className={this.state.coursePopDetail ? style.popCourseList : style.courseList}>\n                    <div className={style.courseListTitle}>Selected Courses</div>\n                    {this.props.selectedCourses.map(function (courseInfo) {\n                        return <CourseSelected courseInfo = {courseInfo} pop={false} handlePop = {this.handlePop.bind(this)} closePop= {this.closePop.bind(this)} coursePopDetail = {this.state.coursePopDetail} removeCourse={this.props.removeCourse}></CourseSelected>\n                    }, this)}\n                </div>\n                <br/>\n\n                <input type=\"button\" value=\"Render Schedule\" className = {this.state.coursePopDetail ? style.popButton : style.button} onClick={this.handleGenerate}/>\n                {/* <Link className = {this.state.coursePopDetail ? style.popButton : style.button} onClick = {this.props.handleGenerate} to = \"/schedule\">\n                    Schedule\n                </Link> */}\n            </div>\n        );\n    }\n}\n\nexport default CoursesSelectedList;","/*\n    Drop down list of course name suggestions\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\n//import style from './styles/CourseNameRecommendation.module.css';\n\n\nclass CourseNameRecommendation extends React.Component {\n    \n    constructor (props) {\n        super(props);\n        console.log(\"render\");\n\n        this.state = {\n            recommendedCourseIDs: null,\n\n        }\n    }\n\n    // O(k) where k is length of courseID\n    // courseID is the user input\n    // listCourseIDs takes in the courseID\n    recommendSearch (listCourseIDs, courseID) {\n        var courseIDsRecommended = [];\n        let mappedResults = [];\n\n        if (courseID != undefined || courseID != null) {\n\n            // recommend if there is at least one character in input\n            if (courseID[0] != undefined) {\n\n                // mapperResults is an array of \"matched\" courses (from API) by the user input \n                mappedResults = listCourseIDs[courseID];\n                // console.log(\"listCourseIDs: \" + listCourseIDs);\n                // console.log(\"courseID: \" + courseID);\n\n\n                if (mappedResults != undefined) {\n\n                    let resultsMaxDisplay = 5;\n                    \n                    // lower maximum results length if one specified is greater than what's possible\n                    if (resultsMaxDisplay > mappedResults.length)\n                        resultsMaxDisplay = mappedResults.length;\n\n                    /* DEBUG: list all info */\n                    // console.log(\"resultsMaxDisplay: \", resultsMaxDisplay)\n                    // console.log(\"mappedResults:\", mappedResults)\n                    // console.log(\"mappedResults.length: \", mappedResults.length)\n                    // console.log(\"mappedResults[0]: \" + mappedResults[0]);\n                    // console.log(\"mappedResults[0].course_id: \" + mappedResults[0].course_id);\n\n                    let i = 0;\n                    /* add recommended courseIDs to list by amount specified by resultsMaxDisplay*/\n                    while (courseIDsRecommended.length < resultsMaxDisplay && i < mappedResults.length) {\n                        // console.log(\"i: \", i);\n                        /* break if i is equal to the length of mappedResults */\n                        if (i >= mappedResults.length)\n                            break; \n\n                        let courseId = mappedResults[i].course_id;\n                        console.log(\"mappedResults:\", mappedResults);\n\n                        /* check if the courseId already exists in courseIDsRecommended */\n                        let doesNotExist = true;\n                        for (let j = 0; j < courseIDsRecommended.length; j++) {\n\n                            if (courseIDsRecommended[j] == courseId) {\n                                doesNotExist = false;\n                                break;\n                            }\n                        }\n\n                        /* push to recommended list if entry does not yet exist */\n                        if (doesNotExist) {\n                            courseIDsRecommended.push(courseId);\n                        }\n                        i++;\n                    }\n\n                }\n                else {\n                    courseIDsRecommended = [];\n                }\n               \n            }\n            else {\n                courseIDsRecommended = [];\n            }\n        }\n        else {\n            courseIDsRecommended = [];\n        }\n\n        return courseIDsRecommended;\n\n    }\n\n    \n\n    render() {\n\n        let currentInput = this.props.currentInput;\n\n        let listCourseIDs = this.props.listCourseIDs;\n\n        var recommendedCourseIDs = this.recommendSearch(listCourseIDs, currentInput);\n\n        console.log(\"recommendedCourseIDs: \" + recommendedCourseIDs);\n        \n        return(\n            <datalist id=\"recommendedCourseIDs\">\n                {recommendedCourseIDs.map(function (id) {\n                    return <option key={id} value={id} ></option>\n                })}\n            </datalist>\n        );\n    }\n\n}\nexport default CourseNameRecommendation;","/*\n    Popup\n    Created by Duncan Chang\n*/\nimport React from 'react';\nimport style from './styles/Popup.module.css';\n\n\nclass Popup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            showPop: true,\n        }\n        this.closePop = this.closePop.bind(this);\n       \n    }\n\n    /*  \n     *  closePop()\n     *  calls the closePop function in Homepage\n     *  calls updateSelectedPop function in Homepage to reset alertMessage\n     */ \n    async closePop()\n    {\n        console.log(\"test here:\");\n        if (this.state.showPop)\n        {\n            await this.props.closePop();\n            this.props.updateSelectedPop(\"hey\");\n        }\n\n    }\n   \n\n    render() {\n        \n        return (\n            <div>\n                <div className={style.popupContainer} >\n                \n                \n                    <div className={style.closeContainer} >\n                        <button className={style.close} onClick={this.closePop}>X</button>\n\n                    </div>\n                    <p className={style.tit} >Please select a class from the list!</p>\n                    <div >\n                        {this.props.popMap.map(function (courseInfo) {\n                        \n                            return <input className={style.popOptions} type=\"button\" item={courseInfo} onClick={() => this.props.updateSelectedPop(courseInfo)} value={courseInfo.course_id + \":    \" + courseInfo.course_name}/>\n\n                            }, this)\n                        }\n                    \n                        <div className={style.alert} id=\"alert\">{this.props.alertMessage}</div>\n                    </div>\n\n                \n\n                </div>\n                <div className={style.overlay}></div>\n\n            </div>\n           \n            \n        );\n      \n    }\n}\n\nexport default Popup;","\n\nimport React, {useState} from 'react';\nimport eStyle from './calendarStyles/Event.module.css'\n\n\nclass Event extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            transY: this.props.transY,\n            eventInfo: this.props.eventInfo,\n            eventStyle: this.props.eventStyle,\n            eventDetail: \"\",\n            hov: false,\n\n        };\n        // console.log(\"info: \", this.state.eventInfo);\n        // console.log(\"eventheight: \" , this.getEventHeight);\n        this.getEventHeight = this.getEventHeight.bind(this);\n        this.getTranslate = this.getTranslate.bind(this);\n        this.setEventDetail = this.setEventDetail.bind(this);\n        this.dblClick = this.dblClick.bind(this);\n        this.setEventDetail();\n\n    }\n\n    setEventDetail() {\n        var detail = this.state.eventInfo.details.split(\",\");\n        var courseID = detail[1];\n        var courseName = detail[0];\n        var res = \"\";\n        // console.log(\"detail: \" + courseID + \" - \" + courseName);\n        return courseID + \" : \" + courseName;\n\n    }\n\n    setEventHover() {\n        var detail = this.state.eventInfo.name.split(\"-\");\n        var type = detail[1];\n        var sec = detail[0];\n        var res =  type + \"-\" + sec \n                    + \" ▶\" +this.state.eventInfo.time_start + \"~\" \n                    + this.state.eventInfo.time_end + \"◀ \"\n                    +  \" Location: \" + this.state.eventInfo.location;\n        console.log(\"doubleclicked\");\n        return res;\n    }\n\n    getEventHeight() {\n        let res = 0;\n        // end time hour - start time hour\n        let hr = (parseInt(this.state.eventInfo.time_end.substring(0, 2)) - parseInt(this.state.eventInfo.time_start.substring(0, 2))) * 60\n        // console.log(\"eventheight hr: \", hr);\n        // 60 - start time min + end time min\n        let min = (hr + parseInt(this.state.eventInfo.time_end.substring(3, 5))) - parseInt(this.state.eventInfo.time_start.substring(3, 5))\n        // console.log(\"eventheight min: \", min);\n\n        \n\n        res = min / 30 * 21;\n        // // gets the height of event in px\n        // console.log(\"eventheihgt: \" + res + \"px\");\n        return res;\n    }\n\n\n    // returns the px of translateY to put event at right Y pos\n    getTranslate() {\n        // 8:00 is translateY(43px)\n        let res = 43;\n        // start gives in the format of \"00:00\"\n        let hr  = (parseInt(this.state.eventInfo.time_start.substring(0, 2)) - 8) * 2;\n        let min = parseInt(this.state.eventInfo.time_start.substring(3, 5)) / 30;\n        // half an hour is an additional of 21px\n        res += ((hr + min) * 21)\n        return res;\n    }\n\n    async dblClick() {\n        await this.setState({\n            hov: !this.state.hov\n        })\n        console.log(\"dblckickckc\");\n    }\n\n\n\n\n\n    render () {\n\n        let transY = \"translateY(\" + this.getTranslate() + \"px)\";\n        let eventHeight = \"\" + this.getEventHeight() + \"px\";\n        let eventStyle = {transform:`${transY}`, height:`${eventHeight}`};\n\n        return (\n            <input type=\"button\" \n                    id=\"eventButton\"\n                    style={eventStyle} \n                    className={this.state.hov ? eStyle.eventButtonHover : eStyle.eventButton} \n                    onDoubleClick={() => this.dblClick()}\n                    value={this.state.hov ? this.setEventHover() : this.setEventDetail()}/>\n            \n\n        );\n\n\n\n    }\n}\n\nexport default Event;","\nimport React from 'react';\nimport dayStyle from './calendarStyles/Day.module.css'\nimport Event from './Event.js'\n\n\nclass Day extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dow: this.props.dow,\n            timeSlots: [],\n            courseSchedule: this.props.courseSchedule,\n            events: this.props.events,\n            startTime: \"\",\n            endTime: \"\",\n        };\n\n        this.generateTime = this.generateTime.bind(this);\n        this.createTimeSlots = this.createTimeSlots.bind(this);\n        this.onDrag = this.onDrag.bind(this);\n        this.onDragEnter = this.onDragEnter.bind(this);\n        this.createTimeSlots();\n        console.log(\"events of \" , this.state.dow , \" : \" , this.state.events);\n    }\n\n \n\n    generateTime(pos) { \n        let check = pos % 4;\n        let res = \"\";\n        if (check == 0) \n        {\n            res = Math.floor(pos / 4) + \":00\";\n        }\n        else if (check == 1)\n        {\n            res = Math.floor(pos / 4) + \":15\";        \n        }\n        else if (check == 2) \n        {\n            res = Math.floor(pos / 4) + \":30\";\n        }\n        else if (check == 3) \n        {\n            res = Math.floor(pos / 4) + \":45\";\n        }\n\n        // add \"0\" accordingly\n        if (res.length != 5)\n        {\n            res = \"0\" + res;\n        }\n        \n        return res;\n    }\n\n    async createTimeSlots() {\n        var tempSlots = [];\n        let star = 0;\n        let end = 96;\n        // if rendering time slots for course schedule, just need to show 7:30 - 23:00\n        // 4 time slots per hour \n        if (this.state.courseSchedule)\n        {\n            star = 29;\n            end = 95;\n        }\n        for (var i = star; i < end; i++)\n        {\n            this.state.timeSlots.push({\n                start: this.generateTime(i),\n                end: this.generateTime(i + 1),\n                busy: false,\n\n            });\n        }\n     \n        \n    }\n\n    onDrag(st){\n        this.setState({\n            startTime: st,\n        })\n        console.log(\"ondrag starts\");\n    }\n\n\n    async onDragEnter(e, et) \n    {\n        this.setState({\n            endTime: et,\n        })\n        var res = et.split(\":\");\n        res = parseInt(res[0] + res[1]);\n        if (e.target.style.backgroundColor.localeCompare(\"\") == 0)\n        {\n            e.target.style.backgroundColor = \"#FFE066\";\n            console.log(\"the props: \" , this.props);\n            await this.props.dayUpdateTimePref(this.state.dow, res, true);\n\n        }\n        else\n        {\n            e.target.style.backgroundColor = \"\";\n            await this.props.dayUpdateTimePref(this.state.dow, res, false);\n\n        }\n        console.log(\"check style of event: \" , e.target.style);\n        console.log(\"check res: \" , res);\n    }\n\n\n\n\n    render() {\n        // for the time column\n        if (this.props.timeBar)\n        {\n            return (\n                <div className={dayStyle.timeBarContainer}>\n                    <div className={dayStyle.timeSlots}>\n                        <div className={dayStyle.timeSlotTop}>\n                            <h3>&nbsp;</h3>\n                        </div>\n                        \n                        {this.state.timeSlots.map(function (timeInfo) { \n                            if (timeInfo.start.substring(3) == \"00\")\n                                return  <div className={dayStyle.timeSlotTop} value={timeInfo.start}>{timeInfo.start}</div>;\n                            else if (timeInfo.start.substring(4) == \"0\")\n                                return <div className={dayStyle.timeSlot} value={timeInfo.start}>&nbsp;</div>;\n                            else    \n                                return <div className={dayStyle.slot} value={timeInfo.start}></div>;\n                        })}\n                    </div>\n                    \n                </div>\n            )\n        }\n        // for the drag display\n        else if (this.state.events == null)\n        {\n            return (\n                <div className={dayStyle.dragDayContainer}>\n                    <div className={dayStyle.timeSlots}>\n                        <div className={dayStyle.timeSlotTop}>\n                            <h3>{this.state.dow.substring(0, 3)}</h3>\n                        </div>\n                        \n                        {this.state.timeSlots.map(function (timeInfo) {\n                            var res = timeInfo.start.split(\":\");\n                            res = parseInt(res[0] + res[1]); \n                            if (timeInfo.start.substring(3) == \"00\")\n                            {\n                                if (this.props.dayTimePref[this.state.dow].includes(res))\n                                {\n                                    return <div className={dayStyle.timeSlotTop} style={{backgroundColor:\"#FFE066\"}} value={timeInfo.start} draggable={true} onDrag={()=>this.onDrag(timeInfo.start)} onDragEnter={(e)=>this.onDragEnter(e, timeInfo.start)} onClick={(e)=>this.onDragEnter(e, timeInfo.start)}>&nbsp;</div>;                    \n                                }\n                                return  <div className={dayStyle.timeSlotTop} value={timeInfo.start} draggable={true} onDrag={()=>this.onDrag(timeInfo.start)} onDragEnter={(e)=>this.onDragEnter(e, timeInfo.start)} onClick={(e)=>this.onDragEnter(e, timeInfo.start)}>&nbsp;</div>;                    \n\n                            }\n                            else if (timeInfo.start.substring(4) == \"0\")\n                            {\n                                if (this.props.dayTimePref[this.state.dow].includes(res))\n                                {\n                                    return <div className={dayStyle.timeSlotTop} style={{backgroundColor:\"#FFE066\"}} value={timeInfo.start} draggable={true} onDrag={()=>this.onDrag(timeInfo.start)} onDragEnter={(e)=>this.onDragEnter(e, timeInfo.start)} onClick={(e)=>this.onDragEnter(e, timeInfo.start)}>&nbsp;</div>;                    \n                                }\n                                return  <div className={dayStyle.timeSlot} value={timeInfo.start} draggable={true} onDrag={()=>this.onDrag(timeInfo.start)} onDragEnter={(e)=>this.onDragEnter(e, timeInfo.start)} onClick={(e)=>this.onDragEnter(e, timeInfo.start)}>&nbsp;</div>;\n\n                            }\n                            else\n                                return <div className={dayStyle.slot} value={timeInfo.start}></div>;\n                        }, this )}\n    \n                    </div>\n                    \n    \n    \n                </div>\n                )\n        }\n        // for display of schedule with events \n        else \n        {\n            return (\n            <div className={dayStyle.dayContainer}>\n                <div className={dayStyle.timeSlots}>\n                    <div className={dayStyle.timeSlotTop}>\n                        <h3>{this.state.dow.substring(0, 3)}</h3>\n                    </div>\n                    \n                    {this.state.timeSlots.map(function (timeInfo) {\n                        if (timeInfo.start.substring(3) == \"00\"){\n                            return  <div className={dayStyle.timeSlotTop} value={timeInfo.start}>&nbsp;</div>;                    \n                        }\n                        else if (timeInfo.start.substring(4) == \"0\")\n                        {\n                            return  <div className={dayStyle.timeSlot} value={timeInfo.start}>&nbsp;</div>;\n\n                        }\n                        else\n                            return <div className={dayStyle.slot} value={timeInfo.start}></div>;\n                    })}\n\n                </div>\n                \n\n                {this.state.events.map(function (eventInfo) {\n                    return <Event eventInfo={eventInfo}> </Event>\n                }, this)}\n             \n\n\n            </div>\n            )\n        }\n        \n\n\n    }\n}\n\nexport default Day;","\n\nimport React from 'react';\nimport Day from './Day.js';\nimport weekStyle from './calendarStyles/Week.module.css'\n\n\nclass Week extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dows: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n            selectedCourses: this.props.selectedCourses,\n            postReqTime: {\"Monday\":[], \"Tuesday\":[],\"Wednesday\":[], \"Thursday\":[],\"Friday\":[], \"Saturday\":[],\"Sunday\":[] },\n            dayTimePref: this.props.dayTimePref,\n            retrievedTime: this.props.dayTimePref,\n            requestError: false\n        }\n    \n        this.retrieveTimePref = this.retrieveTimePref.bind(this);\n        this.scheduleReload = this.scheduleReload.bind(this);\n        this.convertTimeIntToString = this.convertTimeIntToString.bind(this);\n\n\n\n    }\n\n\n\n    \n    async componentDidMount() {\n        console.log(\"componentDidMount() - drag? \" , this.props.drag);\n        if (!this.props.drag)\n        {\n            console.log(\"daypref\")\n            console.log(\"sort before: \" , this.props.dayTimePref);\n            console.log(\"scheduleReload() - call retrieveTimePref\");\n            console.log(\"sort after: \" , this.props.dayTimePref);\n\n            console.log(\"scheduleReload() - call convertSchedulePref\");\n            await this.convertSchedulePref();\n            console.log(\"scheduleReload() - call getRecSchedule\");\n            await this.getRecSchedule();\n           \n        }\n    }\n    async scheduleReload() {\n\n\n        console.log(\"componentDidMount() - drag? \" , this.props.drag);\n        if (!this.props.drag)\n        {\n            console.log(\"daypref\")\n            console.log(\"sort before: \" , this.props.dayTimePref);\n            console.log(\"scheduleReload() - call retrieveTimePref\");\n            await this.props.sortTimePref();\n            console.log(\"sort after: \" , this.props.dayTimePref);\n\n            console.log(\"scheduleReload() - call convertSchedulePref\");\n            await this.convertSchedulePref();\n            console.log(\"scheduleReload() - call getRecSchedule\");\n            await this.getRecSchedule();\n           \n        }\n    }\n\n\n\n\n    // updates time pref called by \"Day\"\n    // day is the dow\n    // time is the time in int\n    // type is either true (add) or false (remove)\n    async dayUpdateTimePref(day, time, type) {\n        console.log(\"dayUpdateTimePref() - props: \", this.props.dayTimePref);\n        if(type)\n        {\n            // add time of day\n            this.props.dayTimePref[day].push(time);\n        }\n        else\n        {\n            // remove time of day\n            // find index of time\n            let pos = this.props.dayTimePref[day].indexOf(time);\n            // remove time at pos\n            this.props.dayTimePref[day].splice(pos, 1);\n\n        }\n        // await this.props.storeTimePref(this.state.dayTimePref);\n        console.log(\"time pref updated? \", this.props.dayTimePref[day]);\n\n    }\n\n    async retrieveTimePref() {\n        console.log(\"time before sort: \", this.props.dayTimePref);\n\n        // this.props.dayTimePref.setState({\n        //     dayTimePref: this.props.dayTimePref\n        // })\n\n        for (var key in this.state.dayTimePref) {\n            await this.setState({\n                dayTimePref: this.state.dayTimePref[key].sort()\n            })\n            // await this.props.dayTimePref[key].sort();\n            \n        }\n        console.log(\"time after sort: \", this.state.dayTimePref);\n    }\n\n\n    // converts time in integer to string for post request arg\n    convertTimeIntToString(time)\n    {\n        var hours = time / 100;\n        var minutes = time % 100;\n        var hourString = \"\" + hours;\n        var minuteString = \"\" + minutes;\n        if (hours < 10)\n        {\n            hourString = \"0\" + hours;\n        }\n        if (minutes < 10)\n        {\n            minuteString = \"0\" + minutes;\n        }\n\n        return hourString + \":\" + minuteString;\n\n    }\n\n    // converts all int time pref to string and push in json\n    convertSchedulePref() {\n        for (var key in this.props.dayTimePref) {\n            // check if it's empty, empty -> 00:00 to 23:59\n            if (this.props.dayTimePref[key].length == 0)\n            {\n                this.state.postReqTime[key].push({\n                    \"time_earliest\": \"00:00\",\n                    \"time_latest\": \"23:59\"\n                });\n            }\n            else if (this.props.dayTimePref[key].length == 1)\n            {\n                var begin = this.props.dayTimePref[key][0];\n                var end = this.props.dayTimePref[key][0] + 30;\n                \n                this.state.postReqTime[key].push({\n                    \"time_earliest\": this.convertTimeIntToString(begin),\n                    \"time_latest\": this.convertTimeIntToString(end)\n                });\n            }\n            else {\n                var begin = this.props.dayTimePref[key][0];\n                for (var i = 1; i < this.props.dayTimePref[key].length; i++)\n                {\n                    // if the time is not consecutive from previous\n                    if ((this.props.dayTimePref[key][i - 1] + 30) != (this.props.dayTimePref[key][i]))\n                    {\n                        this.state.postReqTime[key].push({\n                            \"time_earliest\": this.convertTimeIntToString(begin),\n                            \"time_latest\": this.convertTimeIntToString(this.props.dayTimePref[key][i - 1] + 30)\n                        });\n                        begin = this.props.dayTimePref[key][i];\n                        // if time is the end, and not consecutive from previous\n                        if (i == (this.props.dayTimePref[key].length - 1))\n                        {\n                            this.state.postReqTime[key].push({\n                                \"time_earliest\": this.convertTimeIntToString(begin),\n                                \"time_latest\": this.convertTimeIntToString(begin + 30)\n                            });\n                        }\n                    }\n                    // if time is consecutive, but last\n                    else if (i == (this.props.dayTimePref[key].length - 1))\n                    {\n                        this.state.postReqTime[key].push({\n                            \"time_earliest\": this.convertTimeIntToString(begin),\n                            \"time_latest\": this.convertTimeIntToString(this.props.dayTimePref[key][i] + 30)\n                        });\n                    }\n                    \n                }\n            }\n        }\n    }\n\n\n    // maps through selected courses and push all object ids to array\n    getObjectIDs() {\n        let res = [];\n        this.state.selectedCourses.map(function(info) {\n            res.push(info._id);\n        })\n        return res;\n    }\n\n\n    // post requests recommended schedule made by API\n    async getRecSchedule() {\n        this.setState({\n            requestError: false\n        });\n\n        console.log(\"selected Courses: \" , this.state.selectedCourses);\n        console.log(\"object ids: \", this.getObjectIDs());\n        var API_URL = process.env.REACT_APP_API_URL + \"/courses/schedule\";\n        var requestDetail = {\n            \"objectIds\": this.getObjectIDs(),\n            \"filter\": {\n                \"time\": this.props.postReqTime,\n                    \n                \n            }\n        };\n        await fetch(API_URL, {\n            \n            /* NOTE for duncan: when using the API, you can only set  */\n            method: 'POST',\n\n            /* Note to Duncan: don't set mode: to 'no-cors' because the API does have CORS. You can laeve the 'mode:' out and it will work */\n            // mode: 'no-cors', // no-cors, *cors, same-origin\n\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            /* Note to duncan: i dont think you need these. It still works without them i guess? */\n            // redirect: 'follow', // manual, *follow, error\n            // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(requestDetail) // body data type must match \"Content-Type\" header\n        })\n        .then((response) => \n            response.json())\n        .then(result => {\n            //if the request is valid\n            // console.log(\"result post: \" , result);\n            this.setState({\n                eventInfo: result.data\n            });\n            /* Note to Duncan: because this console.log is inside a .then() statement, it will execute after response is received */\n            console.log(\"within post request event: \", this.state.eventInfo);\n        },\n            (error) => {\n                console.log(\"error\", error);\n                this.setState({\n                    requestError: true\n                });\n        });\n\n        /* Note to Duncan: this will show undefined because it will be executed before a response is received */\n        console.log(\"test thiis post request event: \", this.state.eventInfo);\n        console.log(\"defined? \", this.state.eventInfo != undefined);\n        if (this.state.eventInfo != undefined) {\n            console.log(\"timeunspec\", this.state.eventInfo[\"TimeUnspecified\"]);\n            await this.props.showUnscheduled(true, this.state.eventInfo[\"TimeUnspecified\"]);\n        }\n        \n\n\n    }\n\n\n    render () {\n        if (this.state.eventInfo === undefined && !this.props.drag && !this.state.requestError)\n        {\n            console.log(\"check if list updates before: \" , this.state.eventInfo);\n            return (\n                \n                <div>\n                    Loading Course Schedule... \n                </div>\n            )\n        }\n        else if (this.state.eventInfo === undefined && !this.props.drag && this.state.requestError) {\n            /* the request for schedule came back with an error */\n            return (\n\n                <div>\n                    No possible schedule matches given constraints. Reselect your time preferences.\n                </div>\n            )\n        }\n        else if (this.props.drag)\n        {\n            console.log(\"check if list updates after: \" , this.state.eventInfo);\n\n            return(\n                <div className={weekStyle.dragBox}> \n                    <div className={weekStyle.dragWeekContainer }> \n                        <Day dow=\"\" timeBar={true} courseSchedule={this.props.courseSchedule}></Day>\n                        {this.state.dows.map(function (dow) {\n                            \n                            return <Day className={weekStyle.day} dow={dow} courseSchedule={{}} events={null} dayUpdateTimePref={this.dayUpdateTimePref.bind(this)} dayTimePref={this.props.dayTimePref}></Day>;\n                        }, this)}\n        \n                    </div>\n                </div>\n                \n                \n    \n            )\n        }\n        else\n        {\n            // console.log(\"scheduleReload\");\n            // if (this.state.dayTimePref)\n            // {\n            //     this.scheduleReload();\n            // }\n            return(\n                <div>\n                    <div className={weekStyle.weekContainer}>\n                        <Day dow=\"\" timeBar={true} courseSchedule={this.props.courseSchedule}></Day>\n                        {this.state.dows.map(function (dow) {\n\n                            return <Day className={weekStyle.day} dow={dow} courseSchedule={this.props.courseSchedule} events={this.state.eventInfo[dow]} ></Day>;\n                        }, this)}\n                    </div>\n                    <div>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br />\n                        <br />\n                        <div>\n                            Click \"Render Schedule\" to retrieve randomized selections of the courses you want to take.\n                        </div>\n                        <div>\n                            Click \"Edit Time Preference\" and select times of the day in which you ONLY want to take classes. \n                        </div>\n                        <div>\n                            Note: Days without selected time is assumed to be entirely free\n                        </div>\n                    </div>\n                </div>\n                \n    \n            )\n        }\n        \n\n    }\n}\n\nexport default Week;","/*\n    Pages: Home page\n    Created by Jeremy Jung, Duncan Chang\n*/\n\nimport React from 'react';\nimport CoursesSelectedList from './views/CoursesSelectedList.js';\nimport CourseNameRecommendation from './views/CourseNameRecommendation.js';\nimport style from './views/styles/Homepage.module.css';\nimport csStyle from './views/styles/CourseSchedule.module.css';\nimport Popup from './views/Popup.js';\nimport Week from './views/calendars/Week.js'\n\n/* scripts */\n\nclass Homepage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: null, // all course IDs in semester catalog (mapped first letter)\n            currentInput: null,\n            recommendedCourseIDs: null,\n            selectedCourses: [], // courses added to list\n            checkSameID: true, // if courses returned from API has same couresID\n            popUp: false, // the state of popUp\n            popMap: [],\n            alertMessage: \"***\", \n            renderSchedule: false,\n            modifySearch: false, // true after render scheduled, false when user is able to add course on spot\n            eventInfo: [], // parsed JSON of event info from post request\n            drag: false, // if drag view is selected\n            dragAbove: false,\n            dayTimePref: {\"Monday\":[], \"Tuesday\":[],\"Wednesday\":[], \"Thursday\":[],\"Friday\":[], \"Saturday\":[],\"Sunday\":[] }, // stores the pref time in int\n            postReqTime: {\"Monday\":[], \"Tuesday\":[],\"Wednesday\":[], \"Thursday\":[],\"Friday\":[], \"Saturday\":[],\"Sunday\":[] }, // stores the pref time in proper json format\n            noTimeCourse: [],\n            showNoTimeCourse: false,\n        }\n\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.setMessage = this.setMessage.bind(this);\n        this.updateSelectedPop = this.updateSelectedPop.bind(this);\n        this.closeModifySearch = this.closeModifySearch.bind(this);\n        this.handleCheckInclude = this.handleCheckInclude.bind(this);\n        this.sortTimePref = this.sortTimePref.bind(this);\n        this.handleReload = this.handleReload.bind(this);\n        /* this.showUnscheduled = this.showUnscheduled.bind(this); */\n    }   \n\n    /*\n     * handleCheckID\n     * checks if user is entering a valid courseID.\n     * effect: sets checkSameID to false if multiple courses with different ID \n     *          is found, meaning that the user hasn't entered the exact courseID\n     */\n    handleCheckID(mappedResults) {\n        // Debug purpose\n        console.log(\"mappedResults length: \" + mappedResults.length);\n        console.log(\"checkSameID: \" + this.state.checkSameID);\n        console.log(mappedResults[0]);\n        // console.log(mappedResults[1]);\n        // console.log(mappedResults[0].course_id == mappedResults[1].course_id);\n\n        \n        let checkID = mappedResults[0].course_id;\n\n        // checks if the user input is a valid courseID\n        for (var i = 0; i < mappedResults.length; i++)\n        {\n            console.log(this.state.checkSameID);\n            console.log(\"the length of mappedReusults:\" + mappedResults.length);\n            if (mappedResults[i].course_id !== checkID)\n            {\n                console.log(\"it went in here\");\n                // prevent user from adding incomplete course ID \n                this.setState({\n                    checkSameID: false\n                })\n                break;\n            }\n            console.log(this.state.checkSameID);\n\n        }\n\n    }\n\n    handleCheckInclude(mappedResult) {\n        this.state.selectedCourses.map(function(course) {\n            if (JSON.stringify(mappedResult) === JSON.stringify(course))\n            {\n                console.log(\"mappedResult: \" , mappedResult);\n                console.log(\"course: \" , course);\n                console.log(\"equal? \" , JSON.stringify(mappedResult) === JSON.stringify(course));\n                return true;\n            }\n        })\n        return false;\n    }\n\n    // handles the add function. prevents user from adding non-existing courseID\n    async handleAdd(event) {\n\n        await this.setMessage(\"***\");\n\n        console.log(\"the beginning state: \" + this.state.checkSameID);\n        //prevent default event handler\n        event.preventDefault();\n        let nameField = document.getElementById(\"input\");\n        let mappedResults = this.state.listCourseIDs[this.state.currentInput];\n\n        // checks if user input is valid\n        if (mappedResults !== undefined)\n        {\n            // resets the state of popUp\n            this.setState({\n                popUp: false,\n            })\n            // needs checkSameID to be up to date. always.\n            await this.handleCheckID(mappedResults);\n\n            // This if is to check if Popup is needed\n            if(this.state.checkSameID && mappedResults.length > 1)\n            {\n                this.setState({\n                    popUp: true,\n                    popMap: mappedResults,\n                })\n            }\n            // checks if a course has been added\n            else if (this.state.checkSameID && (this.state.selectedCourses.includes(mappedResults[0])))\n            {\n                await this.setMessage(\"** This course has already been added! **\");\n            }\n            // adds that one course to list\n            else if (this.state.checkSameID && mappedResults.length === 1)\n            {\n                console.log(\"check multt add before\" , mappedResults);\n                console.log(\"check selectedcourses add before\" , this.state.selectedCourses);\n                console.log(\"check include again \" , (this.state.selectedCourses.includes(mappedResults[0])))\n\n                // let name = this.state.currentInput.toUpperCase(); // get user input\n                let courseToAdd = mappedResults[0];\n                // UPDATE STATE selectedCourses \n                var arrayJoined = this.state.selectedCourses.concat(courseToAdd);\n                await this.setState({ selectedCourses: arrayJoined });\n                console.log(\"check selectedcourses add after\" , this.state.selectedCourses);\n\n                nameField.value = \"\";\n            }\n            else{\n                console.log(\"here 2\");\n                console.log(\"alerts here\");\n                // resets the state\n                this.setState({\n                    checkSameID: true,\n                })\n                await this.setMessage(\"** Please enter a VALID COURSE ID! **\");\n            }\n        }\n        // if user input is invalid\n        else{\n            await this.setMessage(\"** Please enter a VALID COURSE ID! **\");\n\n        }\n        \n        \n    }\n\n    /*  \n     *  closePop()\n     *  a callback function by Popup.js's closing div (x)\n     *  manages the state of whether a Popup should be shown\n     *  resets the state of popUp\n     */ \n    closePop()\n    {\n        this.setState({\n            popUp: false\n        })\n    }\n   \n    /*  \n     *  updateSelectedPop()\n     *  manages actions if a course is selected from Popup\n     *  adds course to courselist \n     */ \n    async updateSelectedPop(popSelected)\n    {\n        console.log(\"close: \" + popSelected);\n        // checks if popUp should be shown, and if selected course was previously added\n        if (this.state.popUp && !this.state.selectedCourses.includes(popSelected))\n        {\n            \n            var arrayJoined = this.state.selectedCourses.concat(popSelected);\n            console.log(\"test: \" , popSelected);\n            this.setState({ \n                selectedCourses: arrayJoined,\n                popUp: false \n            });\n            document.getElementById(\"input\").value = \"\";\n        }\n        else if (this.state.popUp){\n            console.log(\"this alert\");\n            await this.setMessage(\"** This Course Has Already Been Added! **\");\n        }\n        else{\n            document.getElementById(\"input\").value = \"\";\n            this.setMessage(\"***\");\n        }\n        \n        \n        \n    }\n    /*  \n     *  setMessage()\n     *  changes the message in div when called using {message}\n     *  sets the state of alertMessage \n     */ \n    setMessage(message){\n        this.setState({\n            alertMessage: message,\n        })\n        \n    }\n\n    handleGenerate() {\n        \n        var selectedCourses = this.state.selectedCourses;\n        console.log(\"handling generate\");\n        console.log(\"selectedCourses: \", selectedCourses);\n    }\n\n    componentDidMount() {\n        // initialize {listCourseIDs} in this component's state\n        this.getListCourseIDs();\n  \n\n    }\n    \n    async getListCourseIDs() {\n        var API_URL = process.env.REACT_APP_API_URL + \"/courses/alg/search-table\";\n        fetch(API_URL)\n            .then(\n                (response) => response.json()\n            )\n            .then(result => {\n                //if the request is valid\n                this.setState({\n                    listCourseIDs: result.data,\n                });\n            },\n            (error) => {\n                console.log(\"error\", error);\n        });\n    }\n\n\n\n    /* CourseID input scripts */\n\n    // todo: link\n    handleChange() {\n        console.log(\"handling change\");\n        let nameField = document.getElementById(\"input\");\n        let name = nameField.value.toLowerCase(); // get user input\n        this.setState((state) => ({ currentInput: name })); // update state (currentInput)\n        \n    }\n\n    /*  \n     *  removeCourse(item)\n     *  deletes the course specified (passed in as \"item\") \n     *  looks through selectedCourses, finds, then delete\n     */ \n    async removeCourse(item) {\n        \n        var res = this.state.selectedCourses;\n        // look for the index and remove\n        for (var i = 0 ; i < this.state.selectedCourses.length; i++)\n        {\n            if (this.state.selectedCourses[i] === item)\n            {\n                delete res[i]\n                await this.setState({\n                    selectedCourses: res,\n                })\n                break;\n            }\n        }\n\n    }\n    async handleSchedule(check) {\n        await this.setState({\n            renderSchedule: check,\n            modifySearch: check,\n        })\n        console.log(\"schedule called\");\n        console.log(this.state.renderSchedule);\n        await this.getListCourseIDs();\n        console.log(\"called rerender\");\n        this.convertSchedulePref();\n        await this.setState({\n            renderSchedule:false,\n        })\n        await this.setState({\n            renderSchedule:true,\n        })\n        // runs post request \n        // await this.getRecSchedule();\n    }\n\n\n    async closeModifySearch(){\n        await this.setState({\n            modifySearch: false,\n        })\n    }\n\n    async storeTimePref(timePref)\n    {\n        await this.setState({            \n            dayTimePref: timePref,\n        })\n\n    }\n\n    async sortTimePref()\n    {\n        console.log(\"called here from HOME\");\n        for (var key in this.state.dayTimePref) {\n            console.log(\"try print sort: \" , this.state.dayTimePref[key].sort());\n            this.state.dayTimePref[key] = this.state.dayTimePref[key].sort();\n            \n            console.log(\"HOME - sorted: \" , this.state.dayTimePref[key]);\n        }\n    }\n\n    convertTimeIntToString(time)\n    {\n        var hours = Math.trunc(time / 100);\n        var minutes = time % 100 + hours * 60;\n        console.log(\"minutes with hour: \" , minutes);\n        hours = Math.trunc(minutes / 60);\n        minutes = minutes % 60;\n        console.log(\"intToString - time: \" , time , \" hour: \", hours, \" minute: \" , minutes);\n        var hourString = \"\" + hours;\n        var minuteString = \"\" + minutes;\n        if (hours < 10)\n        {\n            hourString = \"0\" + hours;\n        }\n        if (minutes < 10)\n        {\n            minuteString = \"0\" + minutes;\n        }\n\n        return hourString + \":\" + minuteString;\n\n    }\n\n    // converts all int time pref to string and push in json\n    convertSchedulePref() {\n        for (var key in this.state.dayTimePref) {\n            /* reset all to empty */\n            this.state.postReqTime[key] = [];\n            // check if it's empty, empty -> 00:00 to 23:59\n            if (this.state.dayTimePref[key].length == 0)\n            {\n                this.state.postReqTime[key].push({\n                    \"time_earliest\": \"00:00\",\n                    \"time_latest\": \"23:59\"\n                });\n            }\n            else if (this.state.dayTimePref[key].length == 1)\n            {\n                var begin = this.state.dayTimePref[key][0];\n                var end = this.state.dayTimePref[key][0] + 30;\n                \n                this.state.postReqTime[key].push({\n                    \"time_earliest\": this.convertTimeIntToString(begin),\n                    \"time_latest\": this.convertTimeIntToString(end)\n                });\n            }\n            else {\n                var begin = this.state.dayTimePref[key][0];\n                for (var i = 1; i < this.state.dayTimePref[key].length; i++)\n                {\n                    // if the time is not consecutive from previous\n                    console.log(\"prev: \", this.state.dayTimePref[key][i-1], \" current: \", this.state.dayTimePref[key][i]);\n                    if ((this.state.dayTimePref[key][i - 1] + 30) != (this.state.dayTimePref[key][i]))\n                    {\n                        this.state.postReqTime[key].push({\n                            \"time_earliest\": this.convertTimeIntToString(begin),\n                            \"time_latest\": this.convertTimeIntToString(this.state.dayTimePref[key][i - 1] + 30)\n                        });\n                        begin = this.state.dayTimePref[key][i];\n                        // if time is the end, and not consecutive from previous\n                        if (i == (this.state.dayTimePref[key].length - 1))\n                        {\n                            this.state.postReqTime[key].push({\n                                \"time_earliest\": this.convertTimeIntToString(begin),\n                                \"time_latest\": this.convertTimeIntToString(begin + 30)\n                            });\n                        }\n                    }\n                    // if time is consecutive, but last\n                    else if (i == (this.state.dayTimePref[key].length - 1))\n                    {\n                        this.state.postReqTime[key].push({\n                            \"time_earliest\": this.convertTimeIntToString(begin),\n                            \"time_latest\": this.convertTimeIntToString(this.state.dayTimePref[key][i] + 30)\n                        });\n                    }\n                    \n                }\n            }\n            \n\n            \n            \n        }\n    }\n\n    async handleReload() \n    {\n        this.setState({\n            drag: !this.state.drag,\n        })\n        if (this.state.drag) {\n            await this.sortTimePref();\n            await this.convertSchedulePref();\n            this.handleSchedule(true);\n\n        }\n    }\n\n    showUnscheduled = (show, courses) => {\n        console.log(\"showUnscheduled is called \", show, courses);\n        if (show) {\n            this.setState({\n                noTimeCourse: courses,\n                showNoTimeCourse: true,\n            })\n            /* this.state.noTimeCourse = courses; */\n            console.log(\"unscheduled courses? \" , this.state.noTimeCourse);\n            /* this.state.showNoTimeCourse = true; */\n\n        }\n        else {\n            this.state.noTimeCourse =[];\n            console.log(\"unscheduled courses? \", this.state.noTimeCourse);\n            this.state.showNoTimeCourse = false;\n        }\n    }\n\n    render() {\n        console.log(\"HOMEPAGE: daytimepref: \", this.state.dayTimePref);\n        const {showNoTimeCourse, NoTimeCourse} = this.state;\n        /* asynchronously render home page after getting courseIDs*/\n        if (this.state.listCourseIDs == null) {\n            // render loading state...\n            return (\n                <div className={style.loadContainer}>\n                    Loading...\n                </div>\n            );\n        }\n        else {\n            // render real UI..\n            return (\n\n                <div className={csStyle.csContainer}>\n                    {/* part 1 header logo and stuff  */}\n                    <header >\n                        <h1>Schedule Planner</h1>\n                        <br/>\n                        <br/>\n                    </header>\n    \n                    {/* part 2 the rest goes in flex column */}\n                    <div className={csStyle.columnContainer}>\n                        <div className={csStyle.searchContainer}>\n                                {this.state.modifySearch ? \n    \n                                    // the modify search button\n                                    <input className={csStyle.courseSubmit} type=\"button\" value=\"Modify List\" onClick={this.closeModifySearch} /> :\n    \n                                    // or the input field that allows user to add courses\n                                    <div className={csStyle.inputContainer}>\n    \n    \n                                        {/* handles the add course form */}\n                                        <form onSubmit={this.handleAdd}>\n                                            \n                                            {/* input text field and search rec droplist */}\n                                            <div>\n                                                <input className={csStyle.courseInput} onChange={this.handleChange} list='recommendedCourseIDs' id=\"input\" type=\"text\" autoComplete=\"off\" placeholder=\"CS-0015\" />\n                                                \n                                                <CourseNameRecommendation \n                                                    listCourseIDs = {this.state.listCourseIDs} \n                                                    currentInput = {this.state.currentInput}>\n                                                </CourseNameRecommendation>\n                                            </div>\n                                            &nbsp;\n                                            {/* add button */}\n                                            {this.state.popUp ? \n                                                // popup for courses of same id but diff names\n                                                <Popup \n                                                    popMap={this.state.popMap} \n                                                    updateSelectedPop={this.updateSelectedPop.bind(this)} \n                                                    closePop={this.closePop.bind(this)} \n                                                    setMessage={this.setMessage.bind(this)}  >\n                                                </Popup> : \n    \n                                                // or just the add button\n                                                <input className={csStyle.courseAdd} type=\"submit\" value=\"Add\" />\n                                            }\n    \n                                        </form>\n    \n                                        <br/>\n    \n                                        {/* the alert message */}\n                                        {(this.state.alertMessage.localeCompare(\"***\"))? <div className={csStyle.alert} id=\"alert\">{this.state.alertMessage}</div> : <div className={style.noAlert} id=\"alert\">{this.state.alertMessage}</div>}\n                                        \n                                    </div>\n                                \n                                }\n\n                            {this.state.showNoTimeCourse ? \n                                <div className={csStyle.unscheduledBox}> \n                                    <div type=\"text\" value=\"Course Time Unspecified\" className={csStyle.unscheduledBoxTitle}>Course Time Unspecified</div>\n                                    {this.state.noTimeCourse.map(function (course){\n                                        console.log(\"course from unscheduled: \" , course);\n                                        return <div className={csStyle.unscheduled}>{course.details + \" \" + course.name}</div>\n                                    }, this)}\n                                </div>\n                                :\n                                <p></p>\n                            }\n                           \n\n\n                            {/* part 2-1 the selected courses block */}\n                            <CoursesSelectedList \n                                handleGenerate = {this.handleGenerate.bind(this)} \n                                selectedCourses={this.state.selectedCourses} \n                                listCourseIDs = {this.state.listCourseIDs} \n                                popUp={this.state.popUp} \n                                removeCourse={this.removeCourse.bind(this)} \n                                setMessage={this.setMessage.bind(this)} \n                                handleSchedule={this.handleSchedule.bind(this)}>\n                            </CoursesSelectedList>\n    \n    \n    \n                        </div>\n                        \n    \n                        {/* part 2-2 flex row the search input and calendar */}\n                        <div className={csStyle.verticalContainer}>\n                            \n                            <br/>\n                            {this.state.renderSchedule ? <input type=\"button\" className={csStyle.timePref} value={this.state.drag ? \"View Schedule\" : \"Edit Time Preference\"} onClick={()=> this.handleReload()}/> : <br></br>}\n                            <br/>\n                            {this.state.renderSchedule ? <Week courseSchedule={true} selectedCourses={this.state.selectedCourses} eventInfo={this.state.eventInfo} drag={false} dayTimePref={this.state.dayTimePref} postReqTime={this.state.postReqTime} showUnscheduled={this.showUnscheduled.bind(this)}></Week> : <p></p>}\n                            {this.state.drag ? <Week courseSchedule={true} selectedCourses={this.state.selectedCourses} eventInfo={{}} drag={true} storeTimePref={() => this.storeTimePref.bind(this)} dayTimePref={this.state.dayTimePref}></Week> : <div></div>}\n    \n    \n                        </div>\n    \n    \n    \n                    </div>\n                    \n    \n    \n    \n    \n                </div>\n            \n            );\n        }\n    }\n}\n\nexport default Homepage;","/*\n *\n *\n */\n\nimport React from 'react';\n\n\nclass Event extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n        }\n\n    }\n   \n\n\n    render() {\n        let weekTitle = \"\";\n        let week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        for (let i = 0; i < 5; i++)\n        {\n            weekTitle += \"<div className=\\\"\" + week[i] + \"\\\" >\"+ week[i] + \"</div>\";\n        }\n        return(\n            <div className=\"calendar\">\n           \n                <div className=\"weekTitle\">\n                    <div className=\"blank\">\n\n                    </div>\n                    {weekTitle}\n\n                </div>\n                <div className=\"events\">\n\n                </div>\n\n            </div>\n\n        )\n\n\n    }\n}\nexport default Event;","/* Written by Jeremy (9/1/2021)\n    Facebook Login button\n*/\n\nimport React from 'react';\nimport style from './styles/ButtonFBLogin.module.css';\n\nclass ButtonFBLogin extends React.Component {\n    constructor (props) {\n        /* use callbacks from parent to get states from this child */\n        super(props);\n\n        this.state = {\n            accessToken_FB: undefined,\n            dataAccessExpirationTime_FB: undefined,\n            userID_FB: undefined\n        }\n\n        this.handleFBLogin = this.handleFBLogin.bind(this);\n        this.parseLoginStatus = this.parseLoginStatus.bind(this);\n        this.handleStatusChange = this.handleStatusChange.bind(this);\n    }\n    \n    /* open Facebook Login pop up and prompt user login */\n    handleFBLogin = (callback) => {\n        window.FB.login(function (responseLogin) {\n\n            if (responseLogin.authResponse) {\n\n                /* FB authorization is complete */\n\n                callback(responseLogin.authResponse);\n\n            }\n            else {\n                console.log(\"authResponse is undefined\");\n            }\n        })\n    }\n\n    /* parse authorization response from FB and update component's states with them */\n    handleStatusChange = (authResponse) => {\n\n        this.setState({\n            accessToken_FB: authResponse.accessToken,\n            dataAccessExpirationTime_FB: authResponse.data_access_expiration_time,\n            userID_FB: authResponse.userID\n        })\n\n        this.props.getGroupsFB();\n    }\n    \n    // parse response for login from FB.getLoginStatus()\n    parseLoginStatus = (response) => {\n\n        // check facebook login status\n        if (response.status === \"unknown\") {\n\n            /* Not already logged in to facebook, start login to FB */\n\n            this.handleFBLogin(\n                // Update component's states with Facebook auth details\n                (authResponse) => this.handleStatusChange(authResponse)\n            );\n\n        }\n        else if (response.status === \"connected\") {\n\n            /* Logged in to FB */\n\n            // Update component's states with Facebook auth details\n            this.handleStatusChange(response.authResponse);\n        }\n    }\n\n    /* check if web page is already logged in to Facebook */\n    checkFBLoginState = () => {\n\n        window.FB.getLoginStatus (  \n            (response) => this.parseLoginStatus(response)\n        );\n    }\n\n    render () {\n\n        if (window.FB !== undefined ) {\n            console.log(\"window.FB is defined!!!!!!!!!!1\")\n        }\n\n        return (\n            <div>\n                <div>\n                    <button onClick={this.checkFBLoginState} className={style.button}>\n                        Login to Facebook\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ButtonFBLogin;","/*\n * \n */\n\nimport React from 'react';\nimport Event from './Event.js';\nimport ButtonFBLogin from './views/ButtonFBLogin.js';\n\nclass Schedule extends React.Component {\n\n    constructor (props) {\n\n        super(props);\n\n        this.state = {\n            TimeRangeView: false,\n            accessToken_FB: undefined,\n            dataAccessExpirationTime_FB: undefined,\n            userID_FB: undefined\n        };\n\n        this.handleTimeRangeView = this.handleTimeRangeView.bind(this);\n        this.getFBAuthDetails = this.getFBAuthDetails.bind(this);\n        this.getGroupsFB = this.getGroupsFB.bind(this);\n    }\n    \n    getFBAuthDetails (state) {\n        this.setState({\n            accessToken_FB: state.accessToken_FB,\n            dataAccessExpirationTime_FB:  state.dataAccessExpirationTime_FB,\n            userID_FB: state.userID_FB\n        })\n\n        this.getGroupsFB();\n    }\n\n    getGroupsFB () {\n        /*\n        var API_URL = \"https://graph.facebook.com/\"+ this.state.userID_FB + \"/groups\";\n\n        fetch(API_URL)\n        .then(\n            (response) => response.json()\n        )\n        .then(result => {\n            //if the request is valid\n            console.log(result);\n        },\n        (error) => {\n            console.log(\"error\", error);\n        });\n        */\n\n        window.FB.api(\n            \"/\" + this.state.userID_FB + \"/groups\", \n            function (response) {\n\n                if (response & !response.error) {\n\n                    console.log(\"response: \", response);\n                    \n                }\n            }\n        )\n\n    }\n\n    handleTimeRangeView() {\n  \n        this.setState({\n            TimeRangeView: !this.state.TimeRangeView\n        });\n        console.log(this.TimeRangeView);\n    \n    }\n\n    render() {\n        return (\n            <main>\n                <h1>\n                    Schedule!\n                </h1>\n                <div className=\"navbar\">\n                    <button onClick={this.handleTimeRangeView}>{`${this.state.TimeRangeView ? 'My Schedule' : 'Time Range Selector'}`}</button>\n\n                </div>\n                \n                <div>\n                    <Event />\n                </div>\n                <div>\n                    <ButtonFBLogin getGroupsFB = {this.getGroupsFB} ></ButtonFBLogin>\n                </div>\n            </main>\n            \n        )\n\n    }\n}\nexport default Schedule;","/* \n    Main react app \n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport Homepage from \"./components/Homepage.js\";\nimport Schedule from \"./components/Schedule.js\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Calendar from './components/Event.js';\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/schedule\">\n                        <Schedule />\n                    </Route>\n                    <Route path=\"/\">\n                        <Homepage />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}","/* Written by Jeremy Jung (9/1/2021)\n    async get Facebook javascript SDK\n*/\n\nconst facebookAppId = process.env.REACT_APP_FACEBOOK_APP_ID;\n\nexport default function initFBSDK () {\n    return new Promise(resolve => {\n        (function (d, s, id) {\n            var js, fjs = d.getElementsByTagName(s)[0];\n            if (d.getElementById(id)) { return; }\n            js = d.createElement(s); js.id = id;\n            js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n            fjs.parentNode.insertBefore(js, fjs);\n        }(document, 'script', 'facebook-jssdk'));\n\n        window.fbAsyncInit = function () {\n            window.FB.init({\n                appId: facebookAppId,\n                cookie: true,\n                xfbml: true,\n                version: 'v9.0'\n            });\n            \n            // check if user is logged in to facebook\n            window.FB.getLoginStatus(({ authResponse }) => {\n\n                if (authResponse) {\n                    console.log(\"Already logged in to facebook\");\n                } else {\n                    console.log(\"Not logged in to facebook\");\n                    resolve();\n                }\n\n            });\n\n            window.FB.AppEvents.logPageView();\n        }\n\n    })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\nimport initFBSDK from './components/views/scripts/fb.js';\n\n/* load React App after FB SDK is received */\ninitFBSDK().then(\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n  )\n);"],"sourceRoot":""}