[{"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/index.js":"1","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/App.js":"2","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/Schedule.js":"3","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/Homepage.js":"4","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/OptionsMainList.js":"5","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/CoursesSelectedList.js":"6","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/CourseNameRecommendation.js":"7","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/OptionMainButton.js":"8","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/CourseSelected.js":"9","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/Event.js":"10","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/Popup.js":"11"},{"size":238,"mtime":1609230344565,"results":"12","hashOfConfig":"13"},{"size":863,"mtime":1609944799668,"results":"14","hashOfConfig":"13"},{"size":1002,"mtime":1610171815617,"results":"15","hashOfConfig":"13"},{"size":8639,"mtime":1610382762412,"results":"16","hashOfConfig":"13"},{"size":774,"mtime":1609230344563,"results":"17","hashOfConfig":"13"},{"size":1126,"mtime":1610372360733,"results":"18","hashOfConfig":"13"},{"size":4124,"mtime":1610171815619,"results":"19","hashOfConfig":"13"},{"size":636,"mtime":1609230344563,"results":"20","hashOfConfig":"13"},{"size":1490,"mtime":1610375169892,"results":"21","hashOfConfig":"13"},{"size":805,"mtime":1610171815613,"results":"22","hashOfConfig":"13"},{"size":1573,"mtime":1610383084063,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1yxqsx0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/index.js",[],["50","51"],"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/App.js",["52","53","54"],"/* \n    Main react app \n    Created by Jeremy Jung\n*/\nimport React from 'react';\nimport Homepage from \"./components/Homepage.js\";\nimport Schedule from \"./components/Schedule.js\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Calendar from './components/Event.js';\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/schedule\">\n                        <Schedule />\n                    </Route>\n                    <Route path=\"/\">\n                        <Homepage />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/Schedule.js",[],"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/Homepage.js",["55","56","57","58"],"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/OptionsMainList.js",["59"],"/*\n    List of buttons on the top right corner listing possible options for algorithms\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\nimport style from './styles/OptionsMainList.module.css';\nimport OptionMainButton from './OptionMainButton.js';\n\nclass OptionsMainList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className={style.container}>\n                <OptionMainButton></OptionMainButton>\n                <OptionMainButton></OptionMainButton>\n                <OptionMainButton></OptionMainButton>\n            </div>\n        );\n    }\n}\n\nexport default OptionsMainList;","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/CoursesSelectedList.js",[],"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/CourseNameRecommendation.js",["60","61","62","63"],"/*\n    Drop down list of course name suggestions\n    Created by Jeremy Jung\n*/\n\nimport React from 'react';\n//import style from './styles/CourseNameRecommendation.module.css';\n\n\nclass CourseNameRecommendation extends React.Component {\n    \n    constructor (props) {\n        super(props);\n        console.log(\"render\");\n\n        this.state = {\n            recommendedCourseIDs: null,\n\n        }\n    }\n\n    // O(k) where k is length of courseID\n    // courseID is the user input\n    // listCourseIDs takes in the courseID\n    recommendSearch (listCourseIDs, courseID) {\n        var courseIDsRecommended = [];\n        let mappedResults = [];\n\n        if (courseID != undefined || courseID != null) {\n\n            // recommend if there is at least one character in input\n            if (courseID[0] != undefined) {\n\n                // mapperResults is an array of \"matched\" courses (from API) by the user input \n                mappedResults = listCourseIDs[courseID];\n                // console.log(\"listCourseIDs: \" + listCourseIDs);\n                // console.log(\"courseID: \" + courseID);\n\n\n                if (mappedResults != undefined) {\n\n                    let resultsMaxDisplay = 5;\n                    \n                    // lower maximum results length if one specified is greater than what's possible\n                    if (resultsMaxDisplay > mappedResults.length)\n                        resultsMaxDisplay = mappedResults.length;\n\n                    /* DEBUG: list all info */\n                    // console.log(\"resultsMaxDisplay: \", resultsMaxDisplay)\n                    // console.log(\"mappedResults:\", mappedResults)\n                    // console.log(\"mappedResults.length: \", mappedResults.length)\n                    // console.log(\"mappedResults[0]: \" + mappedResults[0]);\n                    // console.log(\"mappedResults[0].course_id: \" + mappedResults[0].course_id);\n\n                    let i = 0;\n                    /* add recommended courseIDs to list by amount specified by resultsMaxDisplay*/\n                    while (courseIDsRecommended.length < resultsMaxDisplay && i < mappedResults.length) {\n                        // console.log(\"i: \", i);\n                        /* break if i is equal to the length of mappedResults */\n                        if (i >= mappedResults.length)\n                            break; \n\n                        let courseId = mappedResults[i].course_id;\n                        console.log(\"mappedResults:\", mappedResults);\n\n                        /* check if the courseId already exists in courseIDsRecommended */\n                        let doesNotExist = true;\n                        for (let j = 0; j < courseIDsRecommended.length; j++) {\n\n                            if (courseIDsRecommended[j] == courseId) {\n                                doesNotExist = false;\n                                break;\n                            }\n                        }\n\n                        /* push to recommended list if entry does not yet exist */\n                        if (doesNotExist) {\n                            courseIDsRecommended.push(courseId);\n                        }\n                        i++;\n                    }\n\n                }\n                else {\n                    courseIDsRecommended = [];\n                }\n               \n            }\n            else {\n                courseIDsRecommended = [];\n            }\n        }\n        else {\n            courseIDsRecommended = [];\n        }\n\n        return courseIDsRecommended;\n\n    }\n\n    \n\n    render() {\n\n        let currentInput = this.props.currentInput;\n\n        let listCourseIDs = this.props.listCourseIDs;\n\n        var recommendedCourseIDs = this.recommendSearch(listCourseIDs, currentInput);\n\n        console.log(\"recommendedCourseIDs: \" + recommendedCourseIDs);\n        \n        return(\n            <datalist id=\"recommendedCourseIDs\">\n                {recommendedCourseIDs.map(function (id) {\n                    return <option key={id} value={id} ></option>\n                })}\n            </datalist>\n        );\n    }\n\n}\nexport default CourseNameRecommendation;","/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/OptionMainButton.js",[],"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/CourseSelected.js",[],"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/Event.js",[],"/Users/dumbcan/Desktop/COMP20/Tufts-Schedule-React/frontend/src/components/views/Popup.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":10,"column":22,"nodeType":"70","messageId":"71","endLine":10,"endColumn":28},{"ruleId":"68","severity":1,"message":"72","line":13,"column":5,"nodeType":"70","messageId":"71","endLine":13,"endColumn":9},{"ruleId":"68","severity":1,"message":"73","line":15,"column":8,"nodeType":"70","messageId":"71","endLine":15,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":57,"column":44,"nodeType":"76","messageId":"77","endLine":57,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":81,"column":27,"nodeType":"76","messageId":"77","endLine":81,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":102,"column":69,"nodeType":"76","messageId":"77","endLine":102,"endColumn":71},{"ruleId":"68","severity":1,"message":"79","line":166,"column":13,"nodeType":"70","messageId":"71","endLine":166,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":11,"column":5,"nodeType":"82","messageId":"83","endLine":13,"endColumn":6},{"ruleId":"74","severity":1,"message":"75","line":29,"column":22,"nodeType":"76","messageId":"77","endLine":29,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":32,"column":29,"nodeType":"76","messageId":"77","endLine":32,"endColumn":31},{"ruleId":"74","severity":1,"message":"75","line":40,"column":35,"nodeType":"76","messageId":"77","endLine":40,"endColumn":37},{"ruleId":"74","severity":1,"message":"78","line":70,"column":57,"nodeType":"76","messageId":"77","endLine":70,"endColumn":59},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Calendar' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'selectedCourses' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]

